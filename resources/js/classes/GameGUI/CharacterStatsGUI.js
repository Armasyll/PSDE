class CharacterStatsGUI {
    static initialize() {
        CharacterStatsGUI.initialized = false;
        CharacterStatsGUI.controller = null;
        CharacterStatsGUI.nameField = null;
        CharacterStatsGUI.isVisible = false;
        CharacterStatsGUI.generateController();
        return 0;
    }
    static resize() {
        if (CharacterStatsGUI.initialized != true) {
            return 1;
        }
        CharacterStatsGUI.controller.height = String(Math.max(Game.renderHeight, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.controller.width = String(Math.max(Game.renderWidth, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.header.height = String(Math.max(GameGUI.fontSizeInPixelsWithSpacing * 4, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.header.width = CharacterStatsGUI.controller.width;
        CharacterStatsGUI.nameContainer.height = CharacterStatsGUI.header.height;
        CharacterStatsGUI.nameContainer.width = String(Math.max(CharacterStatsGUI.header.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.nameField.height = String(Math.max((CharacterStatsGUI.nameContainer.heightInPixels / 3) * 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.nameField.width = String(CharacterStatsGUI.nameContainer.widthInPixels - GameGUI.fontSizeSpacing).concat("px");
        CharacterStatsGUI.nameField.fontSize = GameGUI.fontSize;
        CharacterStatsGUI.nameLabel.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.nameLabel.width = CharacterStatsGUI.nameContainer.width;
        CharacterStatsGUI.nameLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.infoContainer.height = CharacterStatsGUI.header.height;
        CharacterStatsGUI.infoContainer.width = String(Math.max((CharacterStatsGUI.header.widthInPixels / 3) * 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.infoTop.height = String(Math.max(CharacterStatsGUI.infoContainer.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.infoTop.width = CharacterStatsGUI.infoContainer.width;
        CharacterStatsGUI.classContainer.height = CharacterStatsGUI.infoTop.height;
        CharacterStatsGUI.classContainer.width = String(Math.max(CharacterStatsGUI.infoTop.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.classField.height = String(Math.max((CharacterStatsGUI.classContainer.heightInPixels / 3) * 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.classField.fontSize = GameGUI.fontSize;
        CharacterStatsGUI.classLabel.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.classLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.backgroundContainer.height = CharacterStatsGUI.infoTop.height;
        CharacterStatsGUI.backgroundContainer.width = String(Math.max(CharacterStatsGUI.infoTop.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.backgroundField.height = String(Math.max((CharacterStatsGUI.backgroundContainer.heightInPixels / 3) * 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.backgroundField.fontSize = GameGUI.fontSize;
        CharacterStatsGUI.backgroundLabel.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.backgroundLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.accountContainer.height = CharacterStatsGUI.infoTop.height;
        CharacterStatsGUI.accountContainer.width = String(Math.max(CharacterStatsGUI.infoTop.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.accountField.height = String(Math.max((CharacterStatsGUI.accountContainer.heightInPixels / 3) * 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.accountField.fontSize = GameGUI.fontSize;
        CharacterStatsGUI.accountLabel.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.accountLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.infoBottom.height = String(Math.max(CharacterStatsGUI.infoContainer.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.infoBottom.width = CharacterStatsGUI.infoContainer.width;
        CharacterStatsGUI.raceContainer.height = CharacterStatsGUI.infoBottom.height;
        CharacterStatsGUI.raceContainer.width = String(Math.max(CharacterStatsGUI.infoBottom.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.raceField.height = String(Math.max((CharacterStatsGUI.raceContainer.heightInPixels / 3) * 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.raceField.fontSize = GameGUI.fontSize;
        CharacterStatsGUI.raceLabel.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.raceLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.alignmentContainer.height = CharacterStatsGUI.infoBottom.height;
        CharacterStatsGUI.alignmentContainer.width = String(Math.max(CharacterStatsGUI.infoBottom.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.alignmentField.height = String(Math.max((CharacterStatsGUI.alignmentContainer.heightInPixels / 3) * 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.alignmentField.fontSize = GameGUI.fontSize;
        CharacterStatsGUI.alignmentLabel.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.alignmentLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.xpContainer.height = CharacterStatsGUI.infoBottom.height;
        CharacterStatsGUI.xpContainer.width = String(Math.max(CharacterStatsGUI.infoBottom.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.xpField.height = String(Math.max((CharacterStatsGUI.xpContainer.heightInPixels / 3) * 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.xpField.fontSize = GameGUI.fontSize;
        CharacterStatsGUI.xpLabel.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.xpLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.body.height = String(CharacterStatsGUI.controller.heightInPixels - CharacterStatsGUI.header.heightInPixels).concat("px");
        CharacterStatsGUI.body.width = CharacterStatsGUI.controller.width;
        CharacterStatsGUI.colA.height = CharacterStatsGUI.body.height;
        CharacterStatsGUI.colA.width = String(Math.max(CharacterStatsGUI.body.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.colARowA.height = String((CharacterStatsGUI.colA.heightInPixels / 7) * 4).concat("px");
        CharacterStatsGUI.colARowA.width = CharacterStatsGUI.colA.width;
        CharacterStatsGUI.colARowAColA.height = CharacterStatsGUI.colARowA.height;
        CharacterStatsGUI.colARowAColA.width = String(Math.max(CharacterStatsGUI.colARowA.widthInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.strengthContainer.height = String(Math.max(CharacterStatsGUI.colARowAColA.heightInPixels / 6, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.strengthContainer.width = CharacterStatsGUI.colARowAColA.width;
        CharacterStatsGUI.strengthButtons.height = CharacterStatsGUI.strengthContainer.height;
        CharacterStatsGUI.strengthButtons.width = String(Math.max(CharacterStatsGUI.strengthContainer.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.strengthIncButton.height = String(Math.max(CharacterStatsGUI.strengthButtons.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.strengthIncButton.width = CharacterStatsGUI.strengthButtons.width;
        CharacterStatsGUI.strengthIncButton.fontSize = GameGUI.fontSize;
        CharacterStatsGUI.strengthDecButton.height = String(Math.max(CharacterStatsGUI.strengthButtons.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.strengthDecButton.width = CharacterStatsGUI.strengthButtons.width;
        CharacterStatsGUI.strengthDecButton.fontSize = GameGUI.fontSize;
        CharacterStatsGUI.strengthData.height = CharacterStatsGUI.strengthContainer.height;
        CharacterStatsGUI.strengthData.width = String(Math.max(CharacterStatsGUI.strengthContainer.widthInPixels - CharacterStatsGUI.strengthButtons.widthInPixels, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.strengthLabel.height = String(Math.max(CharacterStatsGUI.strengthContainer.heightInPixels / 4, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.strengthLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.strengthAbilityModifier.height = GameGUI.fontSize;
        CharacterStatsGUI.strengthAbilityModifier.fontSize = GameGUI.fontSize;
        CharacterStatsGUI.strengthAbilityField.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.strengthAbilityField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.dexterityContainer.height = String(Math.max(CharacterStatsGUI.colARowAColA.heightInPixels / 6, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.dexterityContainer.width = CharacterStatsGUI.colARowAColA.width;
        CharacterStatsGUI.dexterityButtons.height = CharacterStatsGUI.dexterityContainer.height;
        CharacterStatsGUI.dexterityButtons.width = String(Math.max(CharacterStatsGUI.dexterityContainer.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.dexterityIncButton.height = String(Math.max(CharacterStatsGUI.dexterityButtons.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.dexterityIncButton.width = CharacterStatsGUI.dexterityButtons.width;
        CharacterStatsGUI.dexterityIncButton.fontSize = GameGUI.fontSize;
        CharacterStatsGUI.dexterityDecButton.height = String(Math.max(CharacterStatsGUI.dexterityButtons.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.dexterityDecButton.width = CharacterStatsGUI.dexterityButtons.width;
        CharacterStatsGUI.dexterityDecButton.fontSize = GameGUI.fontSize;
        CharacterStatsGUI.dexterityData.height = CharacterStatsGUI.dexterityContainer.height;
        CharacterStatsGUI.dexterityData.width = String(Math.max(CharacterStatsGUI.dexterityContainer.widthInPixels - CharacterStatsGUI.dexterityButtons.widthInPixels, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.dexterityLabel.height = String(Math.max(CharacterStatsGUI.dexterityContainer.heightInPixels / 4, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.dexterityLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.dexterityAbilityModifier.height = GameGUI.fontSize;
        CharacterStatsGUI.dexterityAbilityModifier.fontSize = GameGUI.fontSize;
        CharacterStatsGUI.dexterityAbilityField.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.dexterityAbilityField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.constitutionContainer.height = String(Math.max(CharacterStatsGUI.colARowAColA.heightInPixels / 6, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.constitutionContainer.width = CharacterStatsGUI.colARowAColA.width;
        CharacterStatsGUI.constitutionButtons.height = CharacterStatsGUI.constitutionContainer.height;
        CharacterStatsGUI.constitutionButtons.width = String(Math.max(CharacterStatsGUI.constitutionContainer.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.constitutionIncButton.height = String(Math.max(CharacterStatsGUI.constitutionButtons.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.constitutionIncButton.width = CharacterStatsGUI.constitutionButtons.width;
        CharacterStatsGUI.constitutionIncButton.fontSize = GameGUI.fontSize;
        CharacterStatsGUI.constitutionDecButton.height = String(Math.max(CharacterStatsGUI.constitutionButtons.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.constitutionDecButton.width = CharacterStatsGUI.constitutionButtons.width;
        CharacterStatsGUI.constitutionDecButton.fontSize = GameGUI.fontSize;
        CharacterStatsGUI.constitutionData.height = CharacterStatsGUI.constitutionContainer.height;
        CharacterStatsGUI.constitutionData.width = String(Math.max(CharacterStatsGUI.constitutionContainer.widthInPixels - CharacterStatsGUI.constitutionButtons.widthInPixels, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.constitutionLabel.height = String(Math.max(CharacterStatsGUI.constitutionContainer.heightInPixels / 4, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.constitutionLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.constitutionAbilityModifier.height = GameGUI.fontSize;
        CharacterStatsGUI.constitutionAbilityModifier.fontSize = GameGUI.fontSize;
        CharacterStatsGUI.constitutionAbilityField.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.constitutionAbilityField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.intelligenceContainer.height = String(Math.max(CharacterStatsGUI.colARowAColA.heightInPixels / 6, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.intelligenceContainer.width = CharacterStatsGUI.colARowAColA.width;
        CharacterStatsGUI.intelligenceButtons.height = CharacterStatsGUI.intelligenceContainer.height;
        CharacterStatsGUI.intelligenceButtons.width = String(Math.max(CharacterStatsGUI.intelligenceContainer.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.intelligenceIncButton.height = String(Math.max(CharacterStatsGUI.intelligenceButtons.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.intelligenceIncButton.width = CharacterStatsGUI.intelligenceButtons.width;
        CharacterStatsGUI.intelligenceIncButton.fontSize = GameGUI.fontSize;
        CharacterStatsGUI.intelligenceDecButton.height = String(Math.max(CharacterStatsGUI.intelligenceButtons.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.intelligenceDecButton.width = CharacterStatsGUI.intelligenceButtons.width;
        CharacterStatsGUI.intelligenceDecButton.fontSize = GameGUI.fontSize;
        CharacterStatsGUI.intelligenceData.height = CharacterStatsGUI.intelligenceContainer.height;
        CharacterStatsGUI.intelligenceData.width = String(Math.max(CharacterStatsGUI.intelligenceContainer.widthInPixels - CharacterStatsGUI.intelligenceButtons.widthInPixels, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.intelligenceLabel.height = String(Math.max(CharacterStatsGUI.intelligenceContainer.heightInPixels / 4, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.intelligenceLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.intelligenceAbilityModifier.height = GameGUI.fontSize;
        CharacterStatsGUI.intelligenceAbilityModifier.fontSize = GameGUI.fontSize;
        CharacterStatsGUI.intelligenceAbilityField.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.intelligenceAbilityField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.wisdomContainer.height = String(Math.max(CharacterStatsGUI.colARowAColA.heightInPixels / 6, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.wisdomContainer.width = CharacterStatsGUI.colARowAColA.width;
        CharacterStatsGUI.wisdomButtons.height = CharacterStatsGUI.wisdomContainer.height;
        CharacterStatsGUI.wisdomButtons.width = String(Math.max(CharacterStatsGUI.wisdomContainer.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.wisdomIncButton.height = String(Math.max(CharacterStatsGUI.wisdomButtons.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.wisdomIncButton.width = CharacterStatsGUI.wisdomButtons.width;
        CharacterStatsGUI.wisdomIncButton.fontSize = GameGUI.fontSize;
        CharacterStatsGUI.wisdomDecButton.height = String(Math.max(CharacterStatsGUI.wisdomButtons.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.wisdomDecButton.width = CharacterStatsGUI.wisdomButtons.width;
        CharacterStatsGUI.wisdomDecButton.fontSize = GameGUI.fontSize;
        CharacterStatsGUI.wisdomData.height = CharacterStatsGUI.wisdomContainer.height;
        CharacterStatsGUI.wisdomData.width = String(Math.max(CharacterStatsGUI.wisdomContainer.widthInPixels - CharacterStatsGUI.wisdomButtons.widthInPixels, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.wisdomLabel.height = String(Math.max(CharacterStatsGUI.wisdomContainer.heightInPixels / 4, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.wisdomLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.wisdomAbilityModifier.height = GameGUI.fontSize;
        CharacterStatsGUI.wisdomAbilityModifier.fontSize = GameGUI.fontSize;
        CharacterStatsGUI.wisdomAbilityField.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.wisdomAbilityField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.charismaContainer.height = String(Math.max(CharacterStatsGUI.colARowAColA.heightInPixels / 6, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.charismaContainer.width = CharacterStatsGUI.colARowAColA.width;
        CharacterStatsGUI.charismaButtons.height = CharacterStatsGUI.charismaContainer.height;
        CharacterStatsGUI.charismaButtons.width = String(Math.max(CharacterStatsGUI.charismaContainer.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.charismaIncButton.height = String(Math.max(CharacterStatsGUI.charismaButtons.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.charismaIncButton.width = CharacterStatsGUI.charismaButtons.width;
        CharacterStatsGUI.charismaIncButton.fontSize = GameGUI.fontSize;
        CharacterStatsGUI.charismaDecButton.height = String(Math.max(CharacterStatsGUI.charismaButtons.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.charismaDecButton.width = CharacterStatsGUI.charismaButtons.width;
        CharacterStatsGUI.charismaDecButton.fontSize = GameGUI.fontSize;
        CharacterStatsGUI.charismaData.height = CharacterStatsGUI.charismaContainer.height;
        CharacterStatsGUI.charismaData.width = String(Math.max(CharacterStatsGUI.charismaContainer.widthInPixels - CharacterStatsGUI.charismaButtons.widthInPixels, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.charismaLabel.height = String(Math.max(CharacterStatsGUI.charismaContainer.heightInPixels / 4, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.charismaLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.charismaAbilityModifier.height = GameGUI.fontSize;
        CharacterStatsGUI.charismaAbilityModifier.fontSize = GameGUI.fontSize;
        CharacterStatsGUI.charismaAbilityField.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.charismaAbilityField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.colARowAColB.height = CharacterStatsGUI.colARowA.height;
        CharacterStatsGUI.colARowAColB.width = String(Math.max(CharacterStatsGUI.colARowA.widthInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.inspirationContainer.height = String(Math.max(CharacterStatsGUI.colARowAColB.heightInPixels / 12, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.inspirationContainer.width = CharacterStatsGUI.colARowAColB.width;
        CharacterStatsGUI.inspirationField.height = CharacterStatsGUI.inspirationContainer.height;
        CharacterStatsGUI.inspirationField.width = CharacterStatsGUI.inspirationField.height;
        CharacterStatsGUI.inspirationField.fontSize = GameGUI.fontSize;
        CharacterStatsGUI.inspirationLabel.height = CharacterStatsGUI.inspirationContainer.height;
        CharacterStatsGUI.inspirationLabel.width = String(Math.max(CharacterStatsGUI.inspirationContainer.widthInPixels - CharacterStatsGUI.inspirationField.widthInPixels, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.inspirationLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.proficiencyBonusContainer.height = String(Math.max(CharacterStatsGUI.colARowAColB.heightInPixels / 12, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.proficiencyBonusContainer.width = CharacterStatsGUI.colARowAColB.width;
        CharacterStatsGUI.proficiencyBonusField.height = CharacterStatsGUI.proficiencyBonusContainer.height;
        CharacterStatsGUI.proficiencyBonusField.width = CharacterStatsGUI.proficiencyBonusField.height;
        CharacterStatsGUI.proficiencyBonusField.fontSize = GameGUI.fontSize;
        CharacterStatsGUI.proficiencyBonusLabel.height = CharacterStatsGUI.proficiencyBonusContainer.height;
        CharacterStatsGUI.proficiencyBonusLabel.width = String(Math.max(CharacterStatsGUI.proficiencyBonusContainer.widthInPixels - CharacterStatsGUI.proficiencyBonusField.widthInPixels, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.proficiencyBonusLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowContainer.height = String(GameGUI.fontSizeSmallInPixels * 8).concat("px");
        CharacterStatsGUI.savingThrowContainer.width = CharacterStatsGUI.colARowAColB.width;
        CharacterStatsGUI.savingThrowStrengthContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowStrengthContainer.width = CharacterStatsGUI.savingThrowContainer.width;
        CharacterStatsGUI.savingThrowStrengthCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowStrengthCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowStrengthField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
        CharacterStatsGUI.savingThrowStrengthField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowStrengthLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowStrengthLabel.width = CharacterStatsGUI.savingThrowContainer.width;
        CharacterStatsGUI.savingThrowDexterityContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowDexterityContainer.width = CharacterStatsGUI.savingThrowContainer.width;
        CharacterStatsGUI.savingThrowDexterityCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowDexterityCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowDexterityField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
        CharacterStatsGUI.savingThrowDexterityField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowDexterityLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowDexterityLabel.width = CharacterStatsGUI.savingThrowContainer.width;
        CharacterStatsGUI.savingThrowConstitutionContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowConstitutionContainer.width = CharacterStatsGUI.savingThrowContainer.width;
        CharacterStatsGUI.savingThrowConstitutionCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowConstitutionCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowConstitutionField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
        CharacterStatsGUI.savingThrowConstitutionField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowConstitutionLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowConstitutionLabel.width = CharacterStatsGUI.savingThrowContainer.width;
        CharacterStatsGUI.savingThrowIntelligenceContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowIntelligenceContainer.width = CharacterStatsGUI.savingThrowContainer.width;
        CharacterStatsGUI.savingThrowIntelligenceCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowIntelligenceCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowIntelligenceField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
        CharacterStatsGUI.savingThrowIntelligenceField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowIntelligenceLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowIntelligenceLabel.width = CharacterStatsGUI.savingThrowContainer.width;
        CharacterStatsGUI.savingThrowWisdomContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowWisdomContainer.width = CharacterStatsGUI.savingThrowContainer.width;
        CharacterStatsGUI.savingThrowWisdomCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowWisdomCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowWisdomField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
        CharacterStatsGUI.savingThrowWisdomField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowWisdomLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowWisdomLabel.width = CharacterStatsGUI.savingThrowContainer.width;
        CharacterStatsGUI.savingThrowCharismaContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowCharismaContainer.width = CharacterStatsGUI.savingThrowContainer.width;
        CharacterStatsGUI.savingThrowCharismaCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowCharismaCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowCharismaField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
        CharacterStatsGUI.savingThrowCharismaField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowCharismaLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowCharismaLabel.width = CharacterStatsGUI.savingThrowContainer.width;
        CharacterStatsGUI.savingThrowLabel.width = CharacterStatsGUI.savingThrowContainer.width;
        CharacterStatsGUI.savingThrowLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.savingThrowContainer.paddingBottom = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillContainer.height = String(GameGUI.fontSizeSmallInPixels * 18).concat("px");
        CharacterStatsGUI.skillContainer.width = CharacterStatsGUI.colARowAColB.width;
        CharacterStatsGUI.skillAcrobaticsContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillAcrobaticsContainer.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillAcrobaticsCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillAcrobaticsCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillAcrobaticsField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillAcrobaticsField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
        CharacterStatsGUI.skillAcrobaticsLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillAcrobaticsLabel.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillAnimalHandlingContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillAnimalHandlingContainer.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillAnimalHandlingCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillAnimalHandlingCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillAnimalHandlingField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillAnimalHandlingField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
        CharacterStatsGUI.skillAnimalHandlingLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillAnimalHandlingLabel.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillArcanaContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillArcanaContainer.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillArcanaCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillArcanaCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillArcanaField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillArcanaField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
        CharacterStatsGUI.skillArcanaLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillArcanaLabel.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillAthleticsContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillAthleticsContainer.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillAthleticsCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillAthleticsCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillAthleticsField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillAthleticsField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
        CharacterStatsGUI.skillAthleticsLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillAthleticsLabel.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillDeceptionContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillDeceptionContainer.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillDeceptionCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillDeceptionCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillDeceptionField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillDeceptionField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
        CharacterStatsGUI.skillDeceptionLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillDeceptionLabel.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillHistoryContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillHistoryContainer.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillHistoryCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillHistoryCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillHistoryField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillHistoryField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
        CharacterStatsGUI.skillHistoryLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillHistoryLabel.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillInsightContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillInsightContainer.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillInsightCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillInsightCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillInsightField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillInsightField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
        CharacterStatsGUI.skillInsightLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillInsightLabel.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillIntimidationContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillIntimidationContainer.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillIntimidationCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillIntimidationCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillIntimidationField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillIntimidationField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
        CharacterStatsGUI.skillIntimidationLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillIntimidationLabel.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillInvestigationContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillInvestigationContainer.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillInvestigationCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillInvestigationCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillInvestigationField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillInvestigationField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
        CharacterStatsGUI.skillInvestigationLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillInvestigationLabel.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillMedicineContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillMedicineContainer.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillMedicineCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillMedicineCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillMedicineField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillMedicineField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
        CharacterStatsGUI.skillMedicineLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillMedicineLabel.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillNatureContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillNatureContainer.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillNatureCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillNatureCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillNatureField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillNatureField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
        CharacterStatsGUI.skillNatureLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillNatureLabel.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillPerceptionContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillPerceptionContainer.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillPerceptionCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillPerceptionCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillPerceptionField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillPerceptionField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
        CharacterStatsGUI.skillPerceptionLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillPerceptionLabel.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillPerformanceContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillPerformanceContainer.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillPerformanceCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillPerformanceCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillPerformanceField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillPerformanceField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
        CharacterStatsGUI.skillPerformanceLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillPerformanceLabel.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillPersuasionContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillPersuasionContainer.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillPersuasionCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillPersuasionCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillPersuasionField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillPersuasionField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
        CharacterStatsGUI.skillPersuasionLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillPersuasionLabel.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillReligionContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillReligionContainer.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillReligionCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillReligionCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillReligionField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillReligionField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
        CharacterStatsGUI.skillReligionLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillReligionLabel.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillSleightOfHandContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillSleightOfHandContainer.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillSleightOfHandCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillSleightOfHandCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillSleightOfHandField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillSleightOfHandField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
        CharacterStatsGUI.skillSleightOfHandLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillSleightOfHandLabel.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillStealthContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillStealthContainer.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillStealthCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillStealthCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillStealthField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillStealthField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
        CharacterStatsGUI.skillStealthLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillStealthLabel.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillLabel.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.skillLabel.width = CharacterStatsGUI.skillContainer.width;
        CharacterStatsGUI.skillLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.colARowB.height = String(Math.max((CharacterStatsGUI.colA.heightInPixels / 7) * 0.5, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.colARowB.width = CharacterStatsGUI.colA.width;
        CharacterStatsGUI.passiveWisdomField.height = CharacterStatsGUI.colARowB.height;
        CharacterStatsGUI.passiveWisdomField.width = CharacterStatsGUI.passiveWisdomField.height;
        CharacterStatsGUI.passiveWisdomField.fontSize = GameGUI.fontSize;
        CharacterStatsGUI.passiveWisdomLabel.height = CharacterStatsGUI.colARowB.height;
        CharacterStatsGUI.passiveWisdomLabel.width = String(Math.max(CharacterStatsGUI.colARowB.widthInPixels - CharacterStatsGUI.passiveWisdomField.widthInPixels, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.passiveWisdomLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.proficienciesAndLanguagesContainer.height = String((CharacterStatsGUI.colA.heightInPixels / 7) * 2.5).concat("px");
        CharacterStatsGUI.proficienciesAndLanguagesContainer.width = CharacterStatsGUI.colA.width;
        CharacterStatsGUI.proficienciesAndLanguagesField.height = String(CharacterStatsGUI.proficienciesAndLanguagesContainer.heightInPixels - GameGUI.fontSizeSmallInPixels).concat("px");
        CharacterStatsGUI.proficienciesAndLanguagesField.width = CharacterStatsGUI.proficienciesAndLanguagesContainer.width;
        CharacterStatsGUI.proficienciesAndLanguagesLabel.height = GameGUI.fontSizeSmall;
        CharacterStatsGUI.proficienciesAndLanguagesLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGUI.colB.height = CharacterStatsGUI.body.height;
        CharacterStatsGUI.colB.width = String(Math.max(CharacterStatsGUI.body.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        CharacterStatsGUI.colC.height = CharacterStatsGUI.body.height;
        CharacterStatsGUI.colC.width = String(Math.max(CharacterStatsGUI.body.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
        return 0;
    }
    static generateController() {
        let controller = GameGUI.createStackPanel("stats");
            controller.height = String(Game.renderHeight).concat("px");
            controller.width = String(Game.renderWidth).concat("px");
            controller.isVertical = true;
            let header = GameGUI.createStackPanel("header");
                header.height = String(GameGUI.fontSizeInPixelsWithSpacing * 4).concat("px");
                header.width = controller.width;
                header.isVertical = false;
                let hNameContainer = GameGUI.createStackPanel("nameContainer");
                    hNameContainer.height = header.height;
                    hNameContainer.width = String(Math.max(header.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
                    let hNCField = GameGUI.createInputText("nameField");
                        hNCField.height = String(Math.max(hNameContainer.heightInPixels / 3 * 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
                        hNCField.width = String(hNameContainer.widthInPixels - GameGUI.fontSizeSpacing).concat("px");
                        hNCField.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                        hNCField.isEnabled = false;
                    hNameContainer.addControl(hNCField);
                    let hNCLabel = GameGUI.createTextBlock("nameLabel");
                        hNCLabel.height = String(Math.max(hNameContainer.heightInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
                        hNCLabel.width = hNameContainer.width;
                        hNCLabel.text = "Character Name";
                        //hNCLabel.textSmall = "Char. Name";
                        //hNCLabel.textTiny = "Chr Nm";
                        hNCLabel.fontSize = GameGUI.fontSizeSmall;
                        hNCLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                    hNameContainer.addControl(hNCLabel);
                header.addControl(hNameContainer);
                let hInfoContainer = GameGUI.createStackPanel("infoContainer");
                    hInfoContainer.height = header.height;
                    hInfoContainer.width = String(Math.max(header.widthInPixels / 3 * 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
                    hInfoContainer.isVertical = true;
                    let hICTop = GameGUI.createStackPanel("infoContainerTop");
                        hICTop.height = String(Math.max(hInfoContainer.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
                        hICTop.width = hInfoContainer.width;
                        hICTop.isVertical = false;
                        let hICTClassContainer = GameGUI.createStackPanel("classContainer");
                            hICTClassContainer.height = hICTop.height;
                            hICTClassContainer.width = String(Math.max(hICTop.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
                            hICTClassContainer.isVertical = true;
                            let hICTCCText = GameGUI.createTextBlock("className");
                                hICTCCText.height = String(Math.max(hICTClassContainer.heightInPixels / 3 * 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
                                hICTCCText.color = GameGUI.color;
                                hICTCCText.fontSize = GameGUI.fontSize;
                                hICTCCText.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                            hICTClassContainer.addControl(hICTCCText);
                            let hICTCCLabel = GameGUI.createTextBlock("classLabel");
                                hICTCCLabel.height = String(Math.max(hICTClassContainer.heightInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
                                hICTCCLabel.text = "Class and Level";
                                //hICTCCLabel.textSmall = "Class & Level";
                                //hICTCCLabel.textTiny = "Cls & Lvl";
                                hICTCCLabel.fontSize = GameGUI.fontSizeSmall;
                                hICTCCLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                            hICTClassContainer.addControl(hICTCCLabel);
                        hICTop.addControl(hICTClassContainer);
                        let hICTBGgContainer = GameGUI.createStackPanel("backgroundContainer");
                            hICTBGgContainer.height = hICTop.height;
                            hICTBGgContainer.width = String(Math.max(hICTop.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
                            hICTBGgContainer.isVertical = true;
                            let hICTBGCText = GameGUI.createTextBlock("bgName");
                                hICTBGCText.height = String(Math.max(hICTBGgContainer.heightInPixels / 3 * 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
                                hICTBGCText.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                            hICTBGgContainer.addControl(hICTBGCText);
                            let hICTBGCLabel = GameGUI.createTextBlock("bgLabel");
                                hICTBGCLabel.height = String(Math.max(hICTBGgContainer.heightInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
                                hICTBGCLabel.text = "Background";
                                //hICTBGCLabel.textSmall = "Bckgnd";
                                //hICTBGCLabel.textTiny = "Bg";
                                hICTBGCLabel.fontSize = GameGUI.fontSizeSmall;
                                hICTBGCLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                            hICTBGgContainer.addControl(hICTBGCLabel);
                        hICTop.addControl(hICTBGgContainer);
                        let hICTAccNameContainer = GameGUI.createStackPanel("accountNameContainer");
                            hICTAccNameContainer.height = hICTop.height;
                            hICTAccNameContainer.width = String(Math.max(hICTop.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
                            hICTAccNameContainer.isVertical = true;
                            let hICTANCText = GameGUI.createTextBlock("anName");
                                hICTANCText.height = String(Math.max(hICTAccNameContainer.heightInPixels / 3 * 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
                                hICTANCText.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                            hICTAccNameContainer.addControl(hICTANCText);
                            let hICTANCLabel = GameGUI.createTextBlock("anLabel");
                                hICTANCLabel.height = String(Math.max(hICTAccNameContainer.heightInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
                                hICTANCLabel.text = "Account Name";
                                //hICTANCLabel.textSmall = "Acct. Name";
                                //hICTANCLabel.textTiny = "Act Nm";
                                hICTANCLabel.fontSize = GameGUI.fontSizeSmall;
                                hICTANCLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                            hICTAccNameContainer.addControl(hICTANCLabel);
                        hICTop.addControl(hICTAccNameContainer);
                    hInfoContainer.addControl(hICTop);
                    let hICBot = GameGUI.createStackPanel("infoSubContainerBottom");
                        hICBot.height = String(Math.max(hInfoContainer.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
                        hICBot.width = hInfoContainer.width;
                        hICBot.isVertical = false;
                        hInfoContainer.addControl(hICBot);
                        let hICBRaceContainer = GameGUI.createStackPanel("infoRaceContainer");
                            hICBRaceContainer.height = hICBot.height;
                            hICBRaceContainer.width = String(Math.max(hICBot.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
                            hICBRaceContainer.isVertical = true;
                            let hICBRCText = GameGUI.createTextBlock("raceName");
                                hICBRCText.height = String(Math.max(hICBRaceContainer.heightInPixels / 3 * 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
                                hICBRCText.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                            hICBRaceContainer.addControl(hICBRCText);
                            let hICBRCLabel = GameGUI.createTextBlock("raceLabel");
                                hICBRCLabel.height = String(Math.max(hICBRaceContainer.heightInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
                                hICBRCLabel.text = "Race";
                                //hICBRCLabel.textSmall = "Race";
                                //hICBRCLabel.textTiny = "Rc";
                                hICBRCLabel.fontSize = GameGUI.fontSizeSmall;
                                hICBRCLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                            hICBRaceContainer.addControl(hICBRCLabel);
                        hICBot.addControl(hICBRaceContainer);
                        let hICBAlignmentContainer = GameGUI.createStackPanel("alignmentContainer");
                            hICBAlignmentContainer.height = hICBot.height;
                            hICBAlignmentContainer.width = String(Math.max(hICBot.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
                            hICBAlignmentContainer.isVertical = true;
                            let hICBACText = GameGUI.createTextBlock("alignmentName");
                                hICBACText.height = String(Math.max(hICBAlignmentContainer.heightInPixels / 3 * 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
                                hICBACText.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                            hICBAlignmentContainer.addControl(hICBACText);
                            let hICBACLabel = GameGUI.createTextBlock("alignmentLabel");
                                hICBACLabel.height = String(Math.max(hICBAlignmentContainer.heightInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
                                hICBACLabel.text = "Alignment";
                                //hICBACLabel.textSmall = "Align.";
                                //hICBACLabel.textTiny = "Alnmt";
                                hICBACLabel.fontSize = GameGUI.fontSizeSmall;
                                hICBACLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                            hICBAlignmentContainer.addControl(hICBACLabel);
                        hICBot.addControl(hICBAlignmentContainer);
                        let hICBXPContainer = GameGUI.createStackPanel("xpContainer");
                            hICBXPContainer.height = hICBot.height;
                            hICBXPContainer.width = String(Math.max(hICBot.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
                            hICBXPContainer.isVertical = true;
                            let hICBXPCText = GameGUI.createTextBlock("xpName");
                                hICBXPCText.height = String(Math.max(hICBXPContainer.heightInPixels / 3 * 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
                                hICBXPCText.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                            hICBXPContainer.addControl(hICBXPCText);
                            let hICBXPCLabel = GameGUI.createTextBlock("xpLabel");
                                hICBXPCLabel.height = String(Math.max(hICBXPContainer.heightInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
                                hICBXPCLabel.text = "Experience Points";
                                //hICBXPCLabel.textSmall = "XP";
                                //hICBXPCLabel.textTiny = "XP";
                                hICBXPCLabel.fontSize = GameGUI.fontSizeSmall;
                                hICBXPCLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                            hICBXPContainer.addControl(hICBXPCLabel);
                        hICBot.addControl(hICBXPContainer);
                header.addControl(hInfoContainer);
            controller.addControl(header);
            let body = GameGUI.createStackPanel("body");
                body.height = String(Math.max(controller.heightInPixels - (GameGUI.fontSizeInPixelsWithSpacing * 3), GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
                body.width = controller.width;
                body.isVertical = false;
                let colA = GameGUI.createStackPanel("colA");
                    colA.height = body.height;
                    colA.width = String(Math.max(body.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
                    colA.isVertical = true;
                    let colARowA = GameGUI.createStackPanel("colARowA");
                        colARowA.height = String(Math.max(colA.heightInPixels / 7 * 4, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
                        colARowA.width = colA.width;
                        colARowA.isVertical = false;
                        let colARowAColA = GameGUI.createStackPanel("colARowAColA");
                            colARowAColA.height = colARowA.height;
                            colARowAColA.width = String(Math.max(colARowA.widthInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing)).concat("px");
                            colARowAColA.isVertical = true;
                            let strengthContainer = GameGUI.createStackPanel("strengthContainer");
                                strengthContainer.height = String(colARowAColA.heightInPixels / 6).concat("px");
                                strengthContainer.width = colARowAColA.width;
                                strengthContainer.isVertical = false;
                                let strengthButtons = GameGUI.createStackPanel("strengthButtons");
                                    strengthButtons.height = strengthContainer.height;
                                    strengthButtons.width = String(strengthContainer.heightInPixels / 2).concat("px");
                                    strengthButtons.isVeritcal = true;
                                    let strengthIncButton = GameGUI.createImageButton("strengthInc", "+");
                                        strengthIncButton.height = String(strengthButtons.heightInPixels / 2).concat("px");
                                        strengthIncButton.width = strengthButtons.width;
                                    strengthButtons.addControl(strengthIncButton);
                                    let strengthDecButton = GameGUI.createImageButton("strengthDec", "-");
                                        strengthDecButton.height = String(strengthButtons.heightInPixels / 2).concat("px");
                                        strengthDecButton.width = strengthButtons.width;
                                    strengthButtons.addControl(strengthDecButton);
                                strengthContainer.addControl(strengthButtons);
                                let strengthData = GameGUI.createStackPanel("strengthData");
                                    strengthData.height = strengthContainer.height;
                                    strengthData.width = String(strengthContainer.widthInPixels - strengthButtons.widthInPixels).concat("px");
                                    strengthData.isVertical = true;
                                    let strengthLabel = GameGUI.createTextBlock("strengthLabel");
                                        strengthLabel.height = String(strengthContainer.heightInPixels / 4).concat("px");
                                        strengthLabel.fontSize = GameGUI.fontSizeSmall;
                                        strengthLabel.text = "Strength";
                                        //strengthLabel.textSmall = "Strength";
                                        //strengthLabel.textTiny = "Str";
                                    strengthData.addControl(strengthLabel);
                                    let strengthAbilityModifier = GameGUI.createTextBlock("strengthAbilityModifier");
                                        strengthAbilityModifier.height = GameGUI.fontSize;
                                        strengthAbilityModifier.text = "0";
                                    strengthData.addControl(strengthAbilityModifier);
                                    let strengthAbilityScore = GameGUI.createInputText("strengthAbilityScore");
                                        strengthAbilityScore.height = String(strengthContainer.heightInPixels / 4).concat("px");
                                        strengthAbilityScore.fontSize = GameGUI.fontSizeSmall;
                                        strengthAbilityScore.text = "10";
                                        strengthAbilityScore.isEnabled = false;
                                    strengthData.addControl(strengthAbilityScore);
                                strengthContainer.addControl(strengthData);
                            colARowAColA.addControl(strengthContainer);
                            let dexterityContainer = GameGUI.createStackPanel("dexterityContainer");
                                dexterityContainer.height = String(colARowAColA.heightInPixels / 6).concat("px");
                                dexterityContainer.width = colARowAColA.width;
                                dexterityContainer.isVertical = false;
                                let dexterityButtons = GameGUI.createStackPanel("dexterityButtons");
                                    dexterityButtons.height = dexterityContainer.height;
                                    dexterityButtons.width = String(dexterityContainer.heightInPixels / 2).concat("px");
                                    dexterityButtons.isVeritcal = true;
                                    let dexterityIncButton = GameGUI.createImageButton("dexterityInc", "+");
                                        dexterityIncButton.height = String(dexterityButtons.heightInPixels / 2).concat("px");
                                        dexterityIncButton.width = dexterityButtons.width;
                                    dexterityButtons.addControl(dexterityIncButton);
                                    let dexterityDecButton = GameGUI.createImageButton("dexterityDec", "-");
                                        dexterityDecButton.height = String(dexterityButtons.heightInPixels / 2).concat("px");
                                        dexterityDecButton.width = dexterityButtons.width;
                                    dexterityButtons.addControl(dexterityDecButton);
                                dexterityContainer.addControl(dexterityButtons);
                                let dexterityData = GameGUI.createStackPanel("dexterityData");
                                    dexterityData.height = dexterityContainer.height;
                                    dexterityData.width = String(dexterityContainer.widthInPixels - dexterityButtons.widthInPixels).concat("px");
                                    dexterityData.isVertical = true;
                                    let dexterityLabel = GameGUI.createTextBlock("dexterityLabel");
                                        dexterityLabel.height = String(dexterityContainer.heightInPixels / 4).concat("px");
                                        dexterityLabel.fontSize = GameGUI.fontSizeSmall;
                                        dexterityLabel.text = "Dexterity";
                                        //dexterityLabel.textSmall = "Dexterity";
                                        //dexterityLabel.textTiny = "Dex";
                                    dexterityData.addControl(dexterityLabel);
                                    let dexterityAbilityModifier = GameGUI.createTextBlock("dexterityAbilityModifier");
                                        dexterityAbilityModifier.height = GameGUI.fontSize;
                                        dexterityAbilityModifier.text = "0";
                                    dexterityData.addControl(dexterityAbilityModifier);
                                    let dexterityAbilityScore = GameGUI.createInputText("dexterityAbilityScore");
                                        dexterityAbilityScore.height = String(dexterityContainer.heightInPixels / 4).concat("px");
                                        dexterityAbilityScore.fontSize = GameGUI.fontSizeSmall;
                                        dexterityAbilityScore.text = "10";
                                        dexterityAbilityScore.isEnabled = false;
                                    dexterityData.addControl(dexterityAbilityScore);
                                dexterityContainer.addControl(dexterityData);
                            colARowAColA.addControl(dexterityContainer);
                            let constitutionContainer = GameGUI.createStackPanel("constitutionContainer");
                                constitutionContainer.height = String(colARowAColA.heightInPixels / 6).concat("px");
                                constitutionContainer.width = colARowAColA.width;
                                constitutionContainer.isVertical = false;
                                let constitutionButtons = GameGUI.createStackPanel("constitutionButtons");
                                    constitutionButtons.height = constitutionContainer.height;
                                    constitutionButtons.width = String(constitutionContainer.heightInPixels / 2).concat("px");
                                    constitutionButtons.isVeritcal = true;
                                    let constitutionIncButton = GameGUI.createImageButton("constitutionInc", "+");
                                        constitutionIncButton.height = String(constitutionButtons.heightInPixels / 2).concat("px");
                                        constitutionIncButton.width = constitutionButtons.width;
                                    constitutionButtons.addControl(constitutionIncButton);
                                    let constitutionDecButton = GameGUI.createImageButton("constitutionDec", "-");
                                        constitutionDecButton.height = String(constitutionButtons.heightInPixels / 2).concat("px");
                                        constitutionDecButton.width = constitutionButtons.width;
                                    constitutionButtons.addControl(constitutionDecButton);
                                constitutionContainer.addControl(constitutionButtons);
                                let constitutionData = GameGUI.createStackPanel("constitutionData");
                                    constitutionData.height = constitutionContainer.height;
                                    constitutionData.width = String(constitutionContainer.widthInPixels - constitutionButtons.widthInPixels).concat("px");
                                    constitutionData.isVertical = true;
                                    let constitutionLabel = GameGUI.createTextBlock("constitutionLabel");
                                        constitutionLabel.height = String(constitutionContainer.heightInPixels / 4).concat("px");
                                        constitutionLabel.fontSize = GameGUI.fontSizeSmall;
                                        constitutionLabel.text = "Constitution";
                                        //constitutionLabel.textSmall = "Constitution";
                                        //constitutionLabel.textTiny = "Con";
                                    constitutionData.addControl(constitutionLabel);
                                    let constitutionAbilityModifier = GameGUI.createTextBlock("constitutionAbilityModifier");
                                        constitutionAbilityModifier.height = GameGUI.fontSize;
                                        constitutionAbilityModifier.text = "0";
                                    constitutionData.addControl(constitutionAbilityModifier);
                                    let constitutionAbilityScore = GameGUI.createInputText("constitutionAbilityScore");
                                        constitutionAbilityScore.height = String(constitutionContainer.heightInPixels / 4).concat("px");
                                        constitutionAbilityScore.fontSize = GameGUI.fontSizeSmall;
                                        constitutionAbilityScore.text = "10";
                                        constitutionAbilityScore.isEnabled = false;
                                    constitutionData.addControl(constitutionAbilityScore);
                                constitutionContainer.addControl(constitutionData);
                            colARowAColA.addControl(constitutionContainer);
                            let intelligenceContainer = GameGUI.createStackPanel("intelligenceContainer");
                                intelligenceContainer.height = String(colARowAColA.heightInPixels / 6).concat("px");
                                intelligenceContainer.width = colARowAColA.width;
                                intelligenceContainer.isVertical = false;
                                let intelligenceButtons = GameGUI.createStackPanel("intelligenceButtons");
                                    intelligenceButtons.height = intelligenceContainer.height;
                                    intelligenceButtons.width = String(intelligenceContainer.heightInPixels / 2).concat("px");
                                    intelligenceButtons.isVeritcal = true;
                                    let intelligenceIncButton = GameGUI.createImageButton("intelligenceInc", "+");
                                        intelligenceIncButton.height = String(intelligenceButtons.heightInPixels / 2).concat("px");
                                        intelligenceIncButton.width = intelligenceButtons.width;
                                    intelligenceButtons.addControl(intelligenceIncButton);
                                    let intelligenceDecButton = GameGUI.createImageButton("intelligenceDec", "-");
                                        intelligenceDecButton.height = String(intelligenceButtons.heightInPixels / 2).concat("px");
                                        intelligenceDecButton.width = intelligenceButtons.width;
                                    intelligenceButtons.addControl(intelligenceDecButton);
                                intelligenceContainer.addControl(intelligenceButtons);
                                let intelligenceData = GameGUI.createStackPanel("intelligenceData");
                                    intelligenceData.height = intelligenceContainer.height;
                                    intelligenceData.width = String(intelligenceContainer.widthInPixels - intelligenceButtons.widthInPixels).concat("px");
                                    intelligenceData.isVertical = true;
                                    let intelligenceLabel = GameGUI.createTextBlock("intelligenceLabel");
                                        intelligenceLabel.height = String(intelligenceContainer.heightInPixels / 4).concat("px");
                                        intelligenceLabel.fontSize = GameGUI.fontSizeSmall;
                                        intelligenceLabel.text = "Intelligence";
                                        //intelligenceLabel.textSmall = "Intelligence";
                                        //intelligenceLabel.textTiny = "Int";
                                    intelligenceData.addControl(intelligenceLabel);
                                    let intelligenceAbilityModifier = GameGUI.createTextBlock("intelligenceAbilityModifier");
                                        intelligenceAbilityModifier.height = GameGUI.fontSize;
                                        intelligenceAbilityModifier.text = "0";
                                    intelligenceData.addControl(intelligenceAbilityModifier);
                                    let intelligenceAbilityScore = GameGUI.createInputText("intelligenceAbilityScore");
                                        intelligenceAbilityScore.height = String(intelligenceContainer.heightInPixels / 4).concat("px");
                                        intelligenceAbilityScore.fontSize = GameGUI.fontSizeSmall;
                                        intelligenceAbilityScore.text = "10";
                                        intelligenceAbilityScore.isEnabled = false;
                                    intelligenceData.addControl(intelligenceAbilityScore);
                                intelligenceContainer.addControl(intelligenceData);
                            colARowAColA.addControl(intelligenceContainer);
                            let wisdomContainer = GameGUI.createStackPanel("wisdomContainer");
                                wisdomContainer.height = String(colARowAColA.heightInPixels / 6).concat("px");
                                wisdomContainer.width = colARowAColA.width;
                                wisdomContainer.isVertical = false;
                                let wisdomButtons = GameGUI.createStackPanel("wisdomButtons");
                                    wisdomButtons.height = wisdomContainer.height;
                                    wisdomButtons.width = String(wisdomContainer.heightInPixels / 2).concat("px");
                                    wisdomButtons.isVeritcal = true;
                                    let wisdomIncButton = GameGUI.createImageButton("wisdomInc", "+");
                                        wisdomIncButton.height = String(wisdomButtons.heightInPixels / 2).concat("px");
                                        wisdomIncButton.width = wisdomButtons.width;
                                    wisdomButtons.addControl(wisdomIncButton);
                                    let wisdomDecButton = GameGUI.createImageButton("wisdomDec", "-");
                                        wisdomDecButton.height = String(wisdomButtons.heightInPixels / 2).concat("px");
                                        wisdomDecButton.width = wisdomButtons.width;
                                    wisdomButtons.addControl(wisdomDecButton);
                                wisdomContainer.addControl(wisdomButtons);
                                let wisdomData = GameGUI.createStackPanel("wisdomData");
                                    wisdomData.height = wisdomContainer.height;
                                    wisdomData.width = String(wisdomContainer.widthInPixels - wisdomButtons.widthInPixels).concat("px");
                                    wisdomData.isVertical = true;
                                    let wisdomLabel = GameGUI.createTextBlock("wisdomLabel");
                                        wisdomLabel.height = String(wisdomContainer.heightInPixels / 4).concat("px");
                                        wisdomLabel.fontSize = GameGUI.fontSizeSmall;
                                        wisdomLabel.text = "Wisdom";
                                        //wisdomLabel.textSmall = "Wisdom";
                                        //wisdomLabel.textTiny = "Wis";
                                    wisdomData.addControl(wisdomLabel);
                                    let wisdomAbilityModifier = GameGUI.createTextBlock("wisdomAbilityModifier");
                                        wisdomAbilityModifier.height = GameGUI.fontSize;
                                        wisdomAbilityModifier.text = "0";
                                    wisdomData.addControl(wisdomAbilityModifier);
                                    let wisdomAbilityScore = GameGUI.createInputText("wisdomAbilityScore");
                                        wisdomAbilityScore.height = String(wisdomContainer.heightInPixels / 4).concat("px");
                                        wisdomAbilityScore.fontSize = GameGUI.fontSizeSmall;
                                        wisdomAbilityScore.text = "10";
                                        wisdomAbilityScore.isEnabled = false;
                                    wisdomData.addControl(wisdomAbilityScore);
                                wisdomContainer.addControl(wisdomData);
                            colARowAColA.addControl(wisdomContainer);
                            let charismaContainer = GameGUI.createStackPanel("charismaContainer");
                                charismaContainer.height = String(colARowAColA.heightInPixels / 6).concat("px");
                                charismaContainer.width = colARowAColA.width;
                                charismaContainer.isVertical = false;
                                let charismaButtons = GameGUI.createStackPanel("charismaButtons");
                                    charismaButtons.height = charismaContainer.height;
                                    charismaButtons.width = String(charismaContainer.heightInPixels / 2).concat("px");
                                    charismaButtons.isVeritcal = true;
                                    let charismaIncButton = GameGUI.createImageButton("charismaInc", "+");
                                        charismaIncButton.height = String(charismaButtons.heightInPixels / 2).concat("px");
                                        charismaIncButton.width = charismaButtons.width;
                                    charismaButtons.addControl(charismaIncButton);
                                    let charismaDecButton = GameGUI.createImageButton("charismaDec", "-");
                                        charismaDecButton.height = String(charismaButtons.heightInPixels / 2).concat("px");
                                        charismaDecButton.width = charismaButtons.width;
                                    charismaButtons.addControl(charismaDecButton);
                                charismaContainer.addControl(charismaButtons);
                                let charismaData = GameGUI.createStackPanel("charismaData");
                                    charismaData.height = charismaContainer.height;
                                    charismaData.width = String(charismaContainer.widthInPixels - charismaButtons.widthInPixels).concat("px");
                                    charismaData.isVertical = true;
                                    let charismaLabel = GameGUI.createTextBlock("charismaLabel");
                                        charismaLabel.height = String(charismaContainer.heightInPixels / 4).concat("px");
                                        charismaLabel.fontSize = GameGUI.fontSizeSmall;
                                        charismaLabel.text = "Charisma";
                                        //charismaLabel.textSmall = "Charisma";
                                        //charismaLabel.textTiny = "Cha";
                                    charismaData.addControl(charismaLabel);
                                    let charismaAbilityModifier = GameGUI.createTextBlock("charismaAbilityModifier");
                                        charismaAbilityModifier.height = GameGUI.fontSize;
                                        charismaAbilityModifier.text = "0";
                                    charismaData.addControl(charismaAbilityModifier);
                                    let charismaAbilityScore = GameGUI.createInputText("charismaAbilityScore");
                                        charismaAbilityScore.height = String(charismaContainer.heightInPixels / 4).concat("px");
                                        charismaAbilityScore.fontSize = GameGUI.fontSizeSmall;
                                        charismaAbilityScore.text = "10";
                                        charismaAbilityScore.isEnabled = false;
                                    charismaData.addControl(charismaAbilityScore);
                                charismaContainer.addControl(charismaData);
                            colARowAColA.addControl(charismaContainer);
                        colARowA.addControl(colARowAColA);
                        let colARowAColB = GameGUI.createStackPanel("colAColB");
                            colARowAColB.height = colARowA.height;
                            colARowAColB.width = String(colARowA.widthInPixels / 2).concat("px");
                            colARowAColB.isVertical = true;
                            let inspirationContainer = GameGUI.createStackPanel("inspirationContainer");
                                inspirationContainer.height = String(colARowAColB.heightInPixels / 12).concat("px");
                                inspirationContainer.width = colARowAColB.width;
                                inspirationContainer.isVertical = false;
                                let inspirationScore = GameGUI.createTextBlock("inspirationScore");
                                    inspirationScore.height = inspirationContainer.height;
                                    inspirationScore.width = inspirationScore.height;
                                    inspirationScore.text = "0";
                                inspirationContainer.addControl(inspirationScore);
                                let inspirationLabel = GameGUI.createTextBlock("inspirationLabel");
                                    inspirationLabel.height = inspirationContainer.height;
                                    inspirationLabel.width = String(inspirationContainer.widthInPixels - inspirationScore.widthInPixels).concat("px");
                                    inspirationLabel.fontSize = GameGUI.fontSizeSmall;
                                    inspirationLabel.text = "Inspiration";
                                inspirationContainer.addControl(inspirationLabel);
                            colARowAColB.addControl(inspirationContainer);
                            let proficiencyBonusContainer = GameGUI.createStackPanel("proficiencyBonusContainer");
                                proficiencyBonusContainer.height = String(colARowAColB.heightInPixels / 12).concat("px");
                                proficiencyBonusContainer.width = colARowAColB.width;
                                proficiencyBonusContainer.isVertical = false;
                                let proficiencyBonusScore = GameGUI.createTextBlock("proficiencyBonusScore");
                                    proficiencyBonusScore.height = proficiencyBonusContainer.height;
                                    proficiencyBonusScore.width = proficiencyBonusScore.height;
                                    proficiencyBonusScore.text = "0";
                                proficiencyBonusContainer.addControl(proficiencyBonusScore);
                                let proficiencyBonusLabel = GameGUI.createTextBlock("proficiencyBonusLabel");
                                    proficiencyBonusLabel.height = proficiencyBonusContainer.height;
                                    proficiencyBonusLabel.width = String(proficiencyBonusContainer.widthInPixels - proficiencyBonusScore.widthInPixels).concat("px");
                                    proficiencyBonusLabel.fontSize = GameGUI.fontSizeSmall;
                                    proficiencyBonusLabel.text = "Proficiency Bonus";
                                proficiencyBonusContainer.addControl(proficiencyBonusLabel);
                            colARowAColB.addControl(proficiencyBonusContainer);
                            let savingThrowContainer = GameGUI.createStackPanel("savingThrowContainer");
                                savingThrowContainer.height = String(GameGUI.fontSizeSmallInPixels * 7).concat("px");
                                savingThrowContainer.width = colARowAColB.width;
                                savingThrowContainer.isVertical = true;
                                let sTCStrengthContainer = GameGUI.createStackPanel("savingThrowContainerStrengthContainer");
                                    sTCStrengthContainer.height = GameGUI.fontSizeSmall;
                                    sTCStrengthContainer.width = savingThrowContainer.width;
                                    sTCStrengthContainer.isVertical = false;
                                    let sTCStrengthCheckbox = GameGUI.createCheckbox("savingThrowContainerStrengthCheckbox");
                                        sTCStrengthCheckbox.width = GameGUI.fontSizeSmall;
                                        sTCStrengthCheckbox.height = GameGUI.fontSizeSmall;
                                        sTCStrengthCheckbox.isEnabled = false;
                                    sTCStrengthContainer.addControl(sTCStrengthCheckbox);
                                    let sTCStrengthField = GameGUI.createInputText("savingThrowContainerStrengthField");
                                        sTCStrengthField.fontSize = GameGUI.fontSizeSmall;
                                        sTCStrengthField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
                                        sTCStrengthField.text = "0";
                                        sTCStrengthField.isEnabled = false;
                                    sTCStrengthContainer.addControl(sTCStrengthField);
                                    let sTCStrengthLabel = GameGUI.createTextBlock("savingThrowContainerStrengthLabel");
                                        sTCStrengthLabel.width = sTCStrengthContainer.width;
                                        sTCStrengthLabel.fontSize = GameGUI.fontSizeSmall;
                                        sTCStrengthLabel.text = "Strength";
                                        //sTCStrengthLabel.textSmall = "Strength";
                                        //sTCStrengthLabel.textTiny = "Str";
                                        sTCStrengthLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                    sTCStrengthContainer.addControl(sTCStrengthLabel);
                                savingThrowContainer.addControl(sTCStrengthContainer);
                                let sTCDexterityContainer = GameGUI.createStackPanel("savingThrowContainerDexterityContainer");
                                    sTCDexterityContainer.height = GameGUI.fontSizeSmall;
                                    sTCDexterityContainer.width = savingThrowContainer.width;
                                    sTCDexterityContainer.isVertical = false;
                                    let sTCDexterityCheckbox = GameGUI.createCheckbox("savingThrowContainerDexterityCheckbox");
                                        sTCDexterityCheckbox.width = GameGUI.fontSizeSmall;
                                        sTCDexterityCheckbox.height = GameGUI.fontSizeSmall;
                                        sTCDexterityCheckbox.isEnabled = false;
                                    sTCDexterityContainer.addControl(sTCDexterityCheckbox);
                                    let sTCDexterityField = GameGUI.createInputText("savingThrowContainerDexterityField");
                                        sTCDexterityField.fontSize = GameGUI.fontSizeSmall;
                                        sTCDexterityField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
                                        sTCDexterityField.text = "0";
                                        sTCDexterityField.isEnabled = false;
                                    sTCDexterityContainer.addControl(sTCDexterityField);
                                    let sTCDexterityLabel = GameGUI.createTextBlock("savingThrowContainerDexterityLabel");
                                        sTCDexterityLabel.width = sTCDexterityContainer.width;
                                        sTCDexterityLabel.fontSize = GameGUI.fontSizeSmall;
                                        sTCDexterityLabel.text = "Dexterity";
                                        //sTCDexterityLabel.textSmall = "Dexterity";
                                        //sTCDexterityLabel.textTiny = "Dex";
                                        sTCDexterityLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                    sTCDexterityContainer.addControl(sTCDexterityLabel);
                                savingThrowContainer.addControl(sTCDexterityContainer);
                                let sTCConstitutionContainer = GameGUI.createStackPanel("savingThrowContainerConstitutionContainer");
                                    sTCConstitutionContainer.height = GameGUI.fontSizeSmall;
                                    sTCConstitutionContainer.width = savingThrowContainer.width;
                                    sTCConstitutionContainer.isVertical = false;
                                    let sTCConstitutionCheckbox = GameGUI.createCheckbox("savingThrowContainerConstitutionCheckbox");
                                        sTCConstitutionCheckbox.width = GameGUI.fontSizeSmall;
                                        sTCConstitutionCheckbox.height = GameGUI.fontSizeSmall;
                                        sTCConstitutionCheckbox.isEnabled = false;
                                    sTCConstitutionContainer.addControl(sTCConstitutionCheckbox);
                                    let sTCConstitutionField = GameGUI.createInputText("savingThrowContainerConstitutionField");
                                        sTCConstitutionField.fontSize = GameGUI.fontSizeSmall;
                                        sTCConstitutionField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
                                        sTCConstitutionField.text = "0";
                                        sTCConstitutionField.isEnabled = false;
                                    sTCConstitutionContainer.addControl(sTCConstitutionField);
                                    let sTCConstitutionLabel = GameGUI.createTextBlock("savingThrowContainerConstitutionLabel");
                                        sTCConstitutionLabel.width = sTCConstitutionContainer.width;
                                        sTCConstitutionLabel.fontSize = GameGUI.fontSizeSmall;
                                        sTCConstitutionLabel.text = "Constitution";
                                        //sTCConstitutionLabel.textSmall = "Constitution";
                                        //sTCConstitutionLabel.textTiny = "Con";
                                        sTCConstitutionLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                    sTCConstitutionContainer.addControl(sTCConstitutionLabel);
                                savingThrowContainer.addControl(sTCConstitutionContainer);
                                let sTCIntelligenceContainer = GameGUI.createStackPanel("savingThrowContainerIntelligenceContainer");
                                    sTCIntelligenceContainer.height = GameGUI.fontSizeSmall;
                                    sTCIntelligenceContainer.width = savingThrowContainer.width;
                                    sTCIntelligenceContainer.isVertical = false;
                                    let sTCIntelligenceCheckbox = GameGUI.createCheckbox("savingThrowContainerIntelligenceCheckbox");
                                        sTCIntelligenceCheckbox.width = GameGUI.fontSizeSmall;
                                        sTCIntelligenceCheckbox.height = GameGUI.fontSizeSmall;
                                        sTCIntelligenceCheckbox.isEnabled = false;
                                    sTCIntelligenceContainer.addControl(sTCIntelligenceCheckbox);
                                    let sTCIntelligenceField = GameGUI.createInputText("savingThrowContainerIntelligenceField");
                                        sTCIntelligenceField.fontSize = GameGUI.fontSizeSmall;
                                        sTCIntelligenceField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
                                        sTCIntelligenceField.text = "0";
                                        sTCIntelligenceField.isEnabled = false;
                                    sTCIntelligenceContainer.addControl(sTCIntelligenceField);
                                    let sTCIntelligenceLabel = GameGUI.createTextBlock("savingThrowContainerIntelligenceLabel");
                                        sTCIntelligenceLabel.width = sTCIntelligenceContainer.width;
                                        sTCIntelligenceLabel.fontSize = GameGUI.fontSizeSmall;
                                        sTCIntelligenceLabel.text = "Intelligence";
                                        //sTCIntelligenceLabel.textSmall = "Intelligence";
                                        //sTCIntelligenceLabel.textTiny = "Int";
                                        sTCIntelligenceLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                    sTCIntelligenceContainer.addControl(sTCIntelligenceLabel);
                                savingThrowContainer.addControl(sTCIntelligenceContainer);
                                let sTCWisdomContainer = GameGUI.createStackPanel("savingThrowContainerWisdomContainer");
                                    sTCWisdomContainer.height = GameGUI.fontSizeSmall;
                                    sTCWisdomContainer.width = savingThrowContainer.width;
                                    sTCWisdomContainer.isVertical = false;
                                    let sTCWisdomCheckbox = GameGUI.createCheckbox("savingThrowContainerWisdomCheckbox");
                                        sTCWisdomCheckbox.width = GameGUI.fontSizeSmall;
                                        sTCWisdomCheckbox.height = GameGUI.fontSizeSmall;
                                        sTCWisdomCheckbox.isEnabled = false;
                                    sTCWisdomContainer.addControl(sTCWisdomCheckbox);
                                    let sTCWisdomField = GameGUI.createInputText("savingThrowContainerWisdomField");
                                        sTCWisdomField.fontSize = GameGUI.fontSizeSmall;
                                        sTCWisdomField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
                                        sTCWisdomField.text = "0";
                                        sTCWisdomField.isEnabled = false;
                                    sTCWisdomContainer.addControl(sTCWisdomField);
                                    let sTCWisdomLabel = GameGUI.createTextBlock("savingThrowContainerWisdomLabel");
                                        sTCWisdomLabel.width = sTCWisdomContainer.width;
                                        sTCWisdomLabel.fontSize = GameGUI.fontSizeSmall;
                                        sTCWisdomLabel.text = "Wisdom";
                                        //sTCWisdomLabel.textSmall = "Wisdom";
                                        //sTCWisdomLabel.textTiny = "Wis";
                                        sTCWisdomLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                    sTCWisdomContainer.addControl(sTCWisdomLabel);
                                savingThrowContainer.addControl(sTCWisdomContainer);
                                let sTCCharismaContainer = GameGUI.createStackPanel("savingThrowContainerCharismaContainer");
                                    sTCCharismaContainer.height = GameGUI.fontSizeSmall;
                                    sTCCharismaContainer.width = savingThrowContainer.width;
                                    sTCCharismaContainer.isVertical = false;
                                    let sTCCharismaCheckbox = GameGUI.createCheckbox("savingThrowContainerCharismaCheckbox");
                                        sTCCharismaCheckbox.width = GameGUI.fontSizeSmall;
                                        sTCCharismaCheckbox.height = GameGUI.fontSizeSmall;
                                        sTCCharismaCheckbox.isEnabled = false;
                                    sTCCharismaContainer.addControl(sTCCharismaCheckbox);
                                    let sTCCharismaField = GameGUI.createInputText("savingThrowContainerCharismaField");
                                        sTCCharismaField.fontSize = GameGUI.fontSizeSmall;
                                        sTCCharismaField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
                                        sTCCharismaField.text = "0";
                                        sTCCharismaField.isEnabled = false;
                                    sTCCharismaContainer.addControl(sTCCharismaField);
                                    let sTCCharismaLabel = GameGUI.createTextBlock("savingThrowContainerCharismaLabel");
                                        sTCCharismaLabel.width = sTCCharismaContainer.width;
                                        sTCCharismaLabel.fontSize = GameGUI.fontSizeSmall;
                                        sTCCharismaLabel.text = "Charisma";
                                        //sTCCharismaLabel.textSmall = "Charisma";
                                        //sTCCharismaLabel.textTiny = "Cha";
                                        sTCCharismaLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                    sTCCharismaContainer.addControl(sTCCharismaLabel);
                                savingThrowContainer.addControl(sTCCharismaContainer);
                                let savingThrowLabel = GameGUI.createTextBlock("savingThrowLabel");
                                    savingThrowLabel.height = GameGUI.fontSizeSmall;
                                    savingThrowLabel.width = savingThrowContainer.width;
                                    savingThrowLabel.fontSize = GameGUI.fontSizeSmall;
                                    savingThrowLabel.text = "Saving Throws";
                                savingThrowContainer.addControl(savingThrowLabel);
                            colARowAColB.addControl(savingThrowContainer);
                            let skillContainer = GameGUI.createStackPanel("skillContainer");
                                skillContainer.height = String(GameGUI.fontSizeSmallInPixels * 18).concat("px");
                                skillContainer.width = colARowAColB.width;
                                skillContainer.isVertical = true;
                                let sCAcrobaticsContainer = GameGUI.createStackPanel("skillContainerAcrobaticsContainer");
                                    sCAcrobaticsContainer.height = GameGUI.fontSizeSmall;
                                    sCAcrobaticsContainer.width = skillContainer.width;
                                    sCAcrobaticsContainer.isVertical = false;
                                    let sCAcrobaticsCheckbox = GameGUI.createCheckbox("skillContainerAcrobaticsCheckbox");
                                        sCAcrobaticsCheckbox.width = GameGUI.fontSizeSmall;
                                        sCAcrobaticsCheckbox.height = GameGUI.fontSizeSmall;
                                        sCAcrobaticsCheckbox.isEnabled = false;
                                    sCAcrobaticsContainer.addControl(sCAcrobaticsCheckbox);
                                    let sCAcrobaticsField = GameGUI.createInputText("skillContainerAcrobaticsField");
                                        sCAcrobaticsField.fontSize = GameGUI.fontSizeSmall;
                                        sCAcrobaticsField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
                                        sCAcrobaticsField.text = "0";
                                        sCAcrobaticsField.isEnabled = false;
                                    sCAcrobaticsContainer.addControl(sCAcrobaticsField);
                                    let sCAcrobaticsLabel = GameGUI.createTextBlock("skillContainerAcrobaticsLabel");
                                        sCAcrobaticsLabel.width = sCAcrobaticsContainer.width;
                                        sCAcrobaticsLabel.fontSize = GameGUI.fontSizeSmall;
                                        sCAcrobaticsLabel.text = "Acrobatics";
                                        sCAcrobaticsLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                    sCAcrobaticsContainer.addControl(sCAcrobaticsLabel);
                                skillContainer.addControl(sCAcrobaticsContainer);
                                let sCAnimalHandlingContainer = GameGUI.createStackPanel("skillContainerAnimalHandlingContainer");
                                    sCAnimalHandlingContainer.height = GameGUI.fontSizeSmall;
                                    sCAnimalHandlingContainer.width = skillContainer.width;
                                    sCAnimalHandlingContainer.isVertical = false;
                                    let sCAnimalHandlingCheckbox = GameGUI.createCheckbox("skillContainerAnimalHandlingCheckbox");
                                        sCAnimalHandlingCheckbox.width = GameGUI.fontSizeSmall;
                                        sCAnimalHandlingCheckbox.height = GameGUI.fontSizeSmall;
                                        sCAnimalHandlingCheckbox.isEnabled = false;
                                    sCAnimalHandlingContainer.addControl(sCAnimalHandlingCheckbox);
                                    let sCAnimalHandlingField = GameGUI.createInputText("skillContainerAnimalHandlingField");
                                        sCAnimalHandlingField.fontSize = GameGUI.fontSizeSmall;
                                        sCAnimalHandlingField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
                                        sCAnimalHandlingField.text = "0";
                                        sCAnimalHandlingField.isEnabled = false;
                                    sCAnimalHandlingContainer.addControl(sCAnimalHandlingField);
                                    let sCAnimalHandlingLabel = GameGUI.createTextBlock("skillContainerAnimalHandlingLabel");
                                        sCAnimalHandlingLabel.width = sCAnimalHandlingContainer.width;
                                        sCAnimalHandlingLabel.fontSize = GameGUI.fontSizeSmall;
                                        sCAnimalHandlingLabel.text = "Animal Handling";
                                        sCAnimalHandlingLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                    sCAnimalHandlingContainer.addControl(sCAnimalHandlingLabel);
                                skillContainer.addControl(sCAnimalHandlingContainer);
                                let sCArcanaContainer = GameGUI.createStackPanel("skillContainerArcanaContainer");
                                    sCArcanaContainer.height = GameGUI.fontSizeSmall;
                                    sCArcanaContainer.width = skillContainer.width;
                                    sCArcanaContainer.isVertical = false;
                                    let sCArcanaCheckbox = GameGUI.createCheckbox("skillContainerArcanaCheckbox");
                                        sCArcanaCheckbox.width = GameGUI.fontSizeSmall;
                                        sCArcanaCheckbox.height = GameGUI.fontSizeSmall;
                                        sCArcanaCheckbox.isEnabled = false;
                                    sCArcanaContainer.addControl(sCArcanaCheckbox);
                                    let sCArcanaField = GameGUI.createInputText("skillContainerArcanaField");
                                        sCArcanaField.fontSize = GameGUI.fontSizeSmall;
                                        sCArcanaField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
                                        sCArcanaField.text = "0";
                                        sCArcanaField.isEnabled = false;
                                    sCArcanaContainer.addControl(sCArcanaField);
                                    let sCArcanaLabel = GameGUI.createTextBlock("skillContainerArcanaLabel");
                                        sCArcanaLabel.width = sCArcanaContainer.width;
                                        sCArcanaLabel.fontSize = GameGUI.fontSizeSmall;
                                        sCArcanaLabel.text = "Arcana";
                                        sCArcanaLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                    sCArcanaContainer.addControl(sCArcanaLabel);
                                skillContainer.addControl(sCArcanaContainer);
                                let sCAthleticsContainer = GameGUI.createStackPanel("skillContainerAthleticsContainer");
                                    sCAthleticsContainer.height = GameGUI.fontSizeSmall;
                                    sCAthleticsContainer.width = skillContainer.width;
                                    sCAthleticsContainer.isVertical = false;
                                    let sCAthleticsCheckbox = GameGUI.createCheckbox("skillContainerAthleticsCheckbox");
                                        sCAthleticsCheckbox.width = GameGUI.fontSizeSmall;
                                        sCAthleticsCheckbox.height = GameGUI.fontSizeSmall;
                                        sCAthleticsCheckbox.isEnabled = false;
                                    sCAthleticsContainer.addControl(sCAthleticsCheckbox);
                                    let sCAthleticsField = GameGUI.createInputText("skillContainerAthleticsField");
                                        sCAthleticsField.fontSize = GameGUI.fontSizeSmall;
                                        sCAthleticsField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
                                        sCAthleticsField.text = "0";
                                        sCAthleticsField.isEnabled = false;
                                    sCAthleticsContainer.addControl(sCAthleticsField);
                                    let sCAthleticsLabel = GameGUI.createTextBlock("skillContainerAthleticsLabel");
                                        sCAthleticsLabel.width = sCAthleticsContainer.width;
                                        sCAthleticsLabel.fontSize = GameGUI.fontSizeSmall;
                                        sCAthleticsLabel.text = "Athletics";
                                        sCAthleticsLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                    sCAthleticsContainer.addControl(sCAthleticsLabel);
                                skillContainer.addControl(sCAthleticsContainer);
                                let sCDeceptionContainer = GameGUI.createStackPanel("skillContainerDeceptionContainer");
                                    sCDeceptionContainer.height = GameGUI.fontSizeSmall;
                                    sCDeceptionContainer.width = skillContainer.width;
                                    sCDeceptionContainer.isVertical = false;
                                    let sCDeceptionCheckbox = GameGUI.createCheckbox("skillContainerDeceptionCheckbox");
                                        sCDeceptionCheckbox.width = GameGUI.fontSizeSmall;
                                        sCDeceptionCheckbox.height = GameGUI.fontSizeSmall;
                                        sCDeceptionCheckbox.isEnabled = false;
                                    sCDeceptionContainer.addControl(sCDeceptionCheckbox);
                                    let sCDeceptionField = GameGUI.createInputText("skillContainerDeceptionField");
                                        sCDeceptionField.fontSize = GameGUI.fontSizeSmall;
                                        sCDeceptionField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
                                        sCDeceptionField.text = "0";
                                        sCDeceptionField.isEnabled = false;
                                    sCDeceptionContainer.addControl(sCDeceptionField);
                                    let sCDeceptionLabel = GameGUI.createTextBlock("skillContainerDeceptionLabel");
                                        sCDeceptionLabel.width = sCDeceptionContainer.width;
                                        sCDeceptionLabel.fontSize = GameGUI.fontSizeSmall;
                                        sCDeceptionLabel.text = "Deception";
                                        sCDeceptionLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                    sCDeceptionContainer.addControl(sCDeceptionLabel);
                                skillContainer.addControl(sCDeceptionContainer);
                                let sCHistoryContainer = GameGUI.createStackPanel("skillContainerHistoryContainer");
                                    sCHistoryContainer.height = GameGUI.fontSizeSmall;
                                    sCHistoryContainer.width = skillContainer.width;
                                    sCHistoryContainer.isVertical = false;
                                    let sCHistoryCheckbox = GameGUI.createCheckbox("skillContainerHistoryCheckbox");
                                        sCHistoryCheckbox.width = GameGUI.fontSizeSmall;
                                        sCHistoryCheckbox.height = GameGUI.fontSizeSmall;
                                        sCHistoryCheckbox.isEnabled = false;
                                    sCHistoryContainer.addControl(sCHistoryCheckbox);
                                    let sCHistoryField = GameGUI.createInputText("skillContainerHistoryField");
                                        sCHistoryField.fontSize = GameGUI.fontSizeSmall;
                                        sCHistoryField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
                                        sCHistoryField.text = "0";
                                        sCHistoryField.isEnabled = false;
                                    sCHistoryContainer.addControl(sCHistoryField);
                                    let sCHistoryLabel = GameGUI.createTextBlock("skillContainerHistoryLabel");
                                        sCHistoryLabel.width = sCHistoryContainer.width;
                                        sCHistoryLabel.fontSize = GameGUI.fontSizeSmall;
                                        sCHistoryLabel.text = "History";
                                        sCHistoryLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                    sCHistoryContainer.addControl(sCHistoryLabel);
                                skillContainer.addControl(sCHistoryContainer);
                                let sCInsightContainer = GameGUI.createStackPanel("skillContainerInsightContainer");
                                    sCInsightContainer.height = GameGUI.fontSizeSmall;
                                    sCInsightContainer.width = skillContainer.width;
                                    sCInsightContainer.isVertical = false;
                                    let sCInsightCheckbox = GameGUI.createCheckbox("skillContainerInsightCheckbox");
                                        sCInsightCheckbox.width = GameGUI.fontSizeSmall;
                                        sCInsightCheckbox.height = GameGUI.fontSizeSmall;
                                        sCInsightCheckbox.isEnabled = false;
                                    sCInsightContainer.addControl(sCInsightCheckbox);
                                    let sCInsightField = GameGUI.createInputText("skillContainerInsightField");
                                        sCInsightField.fontSize = GameGUI.fontSizeSmall;
                                        sCInsightField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
                                        sCInsightField.text = "0";
                                        sCInsightField.isEnabled = false;
                                    sCInsightContainer.addControl(sCInsightField);
                                    let sCInsightLabel = GameGUI.createTextBlock("skillContainerInsightLabel");
                                        sCInsightLabel.width = sCInsightContainer.width;
                                        sCInsightLabel.fontSize = GameGUI.fontSizeSmall;
                                        sCInsightLabel.text = "Insight";
                                        sCInsightLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                    sCInsightContainer.addControl(sCInsightLabel);
                                skillContainer.addControl(sCInsightContainer);
                                let sCIntimidationContainer = GameGUI.createStackPanel("skillContainerIntimidationContainer");
                                    sCIntimidationContainer.height = GameGUI.fontSizeSmall;
                                    sCIntimidationContainer.width = skillContainer.width;
                                    sCIntimidationContainer.isVertical = false;
                                    let sCIntimidationCheckbox = GameGUI.createCheckbox("skillContainerIntimidationCheckbox");
                                        sCIntimidationCheckbox.width = GameGUI.fontSizeSmall;
                                        sCIntimidationCheckbox.height = GameGUI.fontSizeSmall;
                                        sCIntimidationCheckbox.isEnabled = false;
                                    sCIntimidationContainer.addControl(sCIntimidationCheckbox);
                                    let sCIntimidationField = GameGUI.createInputText("skillContainerIntimidationField");
                                        sCIntimidationField.fontSize = GameGUI.fontSizeSmall;
                                        sCIntimidationField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
                                        sCIntimidationField.text = "0";
                                        sCIntimidationField.isEnabled = false;
                                    sCIntimidationContainer.addControl(sCIntimidationField);
                                    let sCIntimidationLabel = GameGUI.createTextBlock("skillContainerIntimidationLabel");
                                        sCIntimidationLabel.width = sCIntimidationContainer.width;
                                        sCIntimidationLabel.fontSize = GameGUI.fontSizeSmall;
                                        sCIntimidationLabel.text = "Intimidation";
                                        sCIntimidationLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                    sCIntimidationContainer.addControl(sCIntimidationLabel);
                                skillContainer.addControl(sCIntimidationContainer);
                                let sCInvestigationContainer = GameGUI.createStackPanel("skillContainerInvestigationContainer");
                                    sCInvestigationContainer.height = GameGUI.fontSizeSmall;
                                    sCInvestigationContainer.width = skillContainer.width;
                                    sCInvestigationContainer.isVertical = false;
                                    let sCInvestigationCheckbox = GameGUI.createCheckbox("skillContainerInvestigationCheckbox");
                                        sCInvestigationCheckbox.width = GameGUI.fontSizeSmall;
                                        sCInvestigationCheckbox.height = GameGUI.fontSizeSmall;
                                        sCInvestigationCheckbox.isEnabled = false;
                                    sCInvestigationContainer.addControl(sCInvestigationCheckbox);
                                    let sCInvestigationField = GameGUI.createInputText("skillContainerInvestigationField");
                                        sCInvestigationField.fontSize = GameGUI.fontSizeSmall;
                                        sCInvestigationField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
                                        sCInvestigationField.text = "0";
                                        sCInvestigationField.isEnabled = false;
                                    sCInvestigationContainer.addControl(sCInvestigationField);
                                    let sCInvestigationLabel = GameGUI.createTextBlock("skillContainerInvestigationLabel");
                                        sCInvestigationLabel.width = sCInvestigationContainer.width;
                                        sCInvestigationLabel.fontSize = GameGUI.fontSizeSmall;
                                        sCInvestigationLabel.text = "Investigation";
                                        sCInvestigationLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                    sCInvestigationContainer.addControl(sCInvestigationLabel);
                                skillContainer.addControl(sCInvestigationContainer);
                                let sCMedicineContainer = GameGUI.createStackPanel("skillContainerMedicineContainer");
                                    sCMedicineContainer.height = GameGUI.fontSizeSmall;
                                    sCMedicineContainer.width = skillContainer.width;
                                    sCMedicineContainer.isVertical = false;
                                    let sCMedicineCheckbox = GameGUI.createCheckbox("skillContainerMedicineCheckbox");
                                        sCMedicineCheckbox.width = GameGUI.fontSizeSmall;
                                        sCMedicineCheckbox.height = GameGUI.fontSizeSmall;
                                        sCMedicineCheckbox.isEnabled = false;
                                    sCMedicineContainer.addControl(sCMedicineCheckbox);
                                    let sCMedicineField = GameGUI.createInputText("skillContainerMedicineField");
                                        sCMedicineField.fontSize = GameGUI.fontSizeSmall;
                                        sCMedicineField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
                                        sCMedicineField.text = "0";
                                        sCMedicineField.isEnabled = false;
                                    sCMedicineContainer.addControl(sCMedicineField);
                                    let sCMedicineLabel = GameGUI.createTextBlock("skillContainerMedicineLabel");
                                        sCMedicineLabel.width = sCMedicineContainer.width;
                                        sCMedicineLabel.fontSize = GameGUI.fontSizeSmall;
                                        sCMedicineLabel.text = "Medicine";
                                        sCMedicineLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                    sCMedicineContainer.addControl(sCMedicineLabel);
                                skillContainer.addControl(sCMedicineContainer);
                                let sCNatureContainer = GameGUI.createStackPanel("skillContainerNatureContainer");
                                    sCNatureContainer.height = GameGUI.fontSizeSmall;
                                    sCNatureContainer.width = skillContainer.width;
                                    sCNatureContainer.isVertical = false;
                                    let sCNatureCheckbox = GameGUI.createCheckbox("skillContainerNatureCheckbox");
                                        sCNatureCheckbox.width = GameGUI.fontSizeSmall;
                                        sCNatureCheckbox.height = GameGUI.fontSizeSmall;
                                        sCNatureCheckbox.isEnabled = false;
                                    sCNatureContainer.addControl(sCNatureCheckbox);
                                    let sCNatureField = GameGUI.createInputText("skillContainerNatureField");
                                        sCNatureField.fontSize = GameGUI.fontSizeSmall;
                                        sCNatureField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
                                        sCNatureField.text = "0";
                                        sCNatureField.isEnabled = false;
                                    sCNatureContainer.addControl(sCNatureField);
                                    let sCNatureLabel = GameGUI.createTextBlock("skillContainerNatureLabel");
                                        sCNatureLabel.width = sCNatureContainer.width;
                                        sCNatureLabel.fontSize = GameGUI.fontSizeSmall;
                                        sCNatureLabel.text = "Nature";
                                        sCNatureLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                    sCNatureContainer.addControl(sCNatureLabel);
                                skillContainer.addControl(sCNatureContainer);
                                let sCPerceptionContainer = GameGUI.createStackPanel("skillContainerPerceptionContainer");
                                    sCPerceptionContainer.height = GameGUI.fontSizeSmall;
                                    sCPerceptionContainer.width = skillContainer.width;
                                    sCPerceptionContainer.isVertical = false;
                                    let sCPerceptionCheckbox = GameGUI.createCheckbox("skillContainerPerceptionCheckbox");
                                        sCPerceptionCheckbox.width = GameGUI.fontSizeSmall;
                                        sCPerceptionCheckbox.height = GameGUI.fontSizeSmall;
                                        sCPerceptionCheckbox.isEnabled = false;
                                    sCPerceptionContainer.addControl(sCPerceptionCheckbox);
                                    let sCPerceptionField = GameGUI.createInputText("skillContainerPerceptionField");
                                        sCPerceptionField.fontSize = GameGUI.fontSizeSmall;
                                        sCPerceptionField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
                                        sCPerceptionField.text = "0";
                                        sCPerceptionField.isEnabled = false;
                                    sCPerceptionContainer.addControl(sCPerceptionField);
                                    let sCPerceptionLabel = GameGUI.createTextBlock("skillContainerPerceptionLabel");
                                        sCPerceptionLabel.width = sCPerceptionContainer.width;
                                        sCPerceptionLabel.fontSize = GameGUI.fontSizeSmall;
                                        sCPerceptionLabel.text = "Perception";
                                        sCPerceptionLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                    sCPerceptionContainer.addControl(sCPerceptionLabel);
                                skillContainer.addControl(sCPerceptionContainer);
                                let sCPerformanceContainer = GameGUI.createStackPanel("skillContainerPerformanceContainer");
                                    sCPerformanceContainer.height = GameGUI.fontSizeSmall;
                                    sCPerformanceContainer.width = skillContainer.width;
                                    sCPerformanceContainer.isVertical = false;
                                    let sCPerformanceCheckbox = GameGUI.createCheckbox("skillContainerPerformanceCheckbox");
                                        sCPerformanceCheckbox.width = GameGUI.fontSizeSmall;
                                        sCPerformanceCheckbox.height = GameGUI.fontSizeSmall;
                                        sCPerformanceCheckbox.isEnabled = false;
                                    sCPerformanceContainer.addControl(sCPerformanceCheckbox);
                                    let sCPerformanceField = GameGUI.createInputText("skillContainerPerformanceField");
                                        sCPerformanceField.fontSize = GameGUI.fontSizeSmall;
                                        sCPerformanceField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
                                        sCPerformanceField.text = "0";
                                        sCPerformanceField.isEnabled = false;
                                    sCPerformanceContainer.addControl(sCPerformanceField);
                                    let sCPerformanceLabel = GameGUI.createTextBlock("skillContainerPerformanceLabel");
                                        sCPerformanceLabel.width = sCPerformanceContainer.width;
                                        sCPerformanceLabel.fontSize = GameGUI.fontSizeSmall;
                                        sCPerformanceLabel.text = "Performance";
                                        sCPerformanceLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                    sCPerformanceContainer.addControl(sCPerformanceLabel);
                                skillContainer.addControl(sCPerformanceContainer);
                                let sCPersuasionContainer = GameGUI.createStackPanel("skillContainerPersuasionContainer");
                                    sCPersuasionContainer.height = GameGUI.fontSizeSmall;
                                    sCPersuasionContainer.width = skillContainer.width;
                                    sCPersuasionContainer.isVertical = false;
                                    let sCPersuasionCheckbox = GameGUI.createCheckbox("skillContainerPersuasionCheckbox");
                                        sCPersuasionCheckbox.width = GameGUI.fontSizeSmall;
                                        sCPersuasionCheckbox.height = GameGUI.fontSizeSmall;
                                        sCPersuasionCheckbox.isEnabled = false;
                                    sCPersuasionContainer.addControl(sCPersuasionCheckbox);
                                    let sCPersuasionField = GameGUI.createInputText("skillContainerPersuasionField");
                                        sCPersuasionField.fontSize = GameGUI.fontSizeSmall;
                                        sCPersuasionField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
                                        sCPersuasionField.text = "0";
                                        sCPersuasionField.isEnabled = false;
                                    sCPersuasionContainer.addControl(sCPersuasionField);
                                    let sCPersuasionLabel = GameGUI.createTextBlock("skillContainerPersuasionLabel");
                                        sCPersuasionLabel.width = sCPersuasionContainer.width;
                                        sCPersuasionLabel.fontSize = GameGUI.fontSizeSmall;
                                        sCPersuasionLabel.text = "Persuasion";
                                        sCPersuasionLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                    sCPersuasionContainer.addControl(sCPersuasionLabel);
                                skillContainer.addControl(sCPersuasionContainer);
                                let sCReligionContainer = GameGUI.createStackPanel("skillContainerReligionContainer");
                                    sCReligionContainer.height = GameGUI.fontSizeSmall;
                                    sCReligionContainer.width = skillContainer.width;
                                    sCReligionContainer.isVertical = false;
                                    let sCReligionCheckbox = GameGUI.createCheckbox("skillContainerReligionCheckbox");
                                        sCReligionCheckbox.width = GameGUI.fontSizeSmall;
                                        sCReligionCheckbox.height = GameGUI.fontSizeSmall;
                                        sCReligionCheckbox.isEnabled = false;
                                    sCReligionContainer.addControl(sCReligionCheckbox);
                                    let sCReligionField = GameGUI.createInputText("skillContainerReligionField");
                                        sCReligionField.fontSize = GameGUI.fontSizeSmall;
                                        sCReligionField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
                                        sCReligionField.text = "0";
                                        sCReligionField.isEnabled = false;
                                    sCReligionContainer.addControl(sCReligionField);
                                    let sCReligionLabel = GameGUI.createTextBlock("skillContainerReligionLabel");
                                        sCReligionLabel.width = sCReligionContainer.width;
                                        sCReligionLabel.fontSize = GameGUI.fontSizeSmall;
                                        sCReligionLabel.text = "Religion";
                                        sCReligionLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                    sCReligionContainer.addControl(sCReligionLabel);
                                skillContainer.addControl(sCReligionContainer);
                                let sCSleightOfHandContainer = GameGUI.createStackPanel("skillContainerSleightOfHandContainer");
                                    sCSleightOfHandContainer.height = GameGUI.fontSizeSmall;
                                    sCSleightOfHandContainer.width = skillContainer.width;
                                    sCSleightOfHandContainer.isVertical = false;
                                    let sCSleightOfHandCheckbox = GameGUI.createCheckbox("skillContainerSleightOfHandCheckbox");
                                        sCSleightOfHandCheckbox.width = GameGUI.fontSizeSmall;
                                        sCSleightOfHandCheckbox.height = GameGUI.fontSizeSmall;
                                        sCSleightOfHandCheckbox.isEnabled = false;
                                    sCSleightOfHandContainer.addControl(sCSleightOfHandCheckbox);
                                    let sCSleightOfHandField = GameGUI.createInputText("skillContainerSleightOfHandField");
                                        sCSleightOfHandField.fontSize = GameGUI.fontSizeSmall;
                                        sCSleightOfHandField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
                                        sCSleightOfHandField.text = "0";
                                        sCSleightOfHandField.isEnabled = false;
                                    sCSleightOfHandContainer.addControl(sCSleightOfHandField);
                                    let sCSleightOfHandLabel = GameGUI.createTextBlock("skillContainerSleightOfHandLabel");
                                        sCSleightOfHandLabel.width = sCSleightOfHandContainer.width;
                                        sCSleightOfHandLabel.fontSize = GameGUI.fontSizeSmall;
                                        sCSleightOfHandLabel.text = "Sleight of Hand";
                                        sCSleightOfHandLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                    sCSleightOfHandContainer.addControl(sCSleightOfHandLabel);
                                skillContainer.addControl(sCSleightOfHandContainer);
                                let sCStealthContainer = GameGUI.createStackPanel("skillContainerStealthContainer");
                                    sCStealthContainer.height = GameGUI.fontSizeSmall;
                                    sCStealthContainer.width = skillContainer.width;
                                    sCStealthContainer.isVertical = false;
                                    let sCStealthCheckbox = GameGUI.createCheckbox("skillContainerStealthCheckbox");
                                        sCStealthCheckbox.width = GameGUI.fontSizeSmall;
                                        sCStealthCheckbox.height = GameGUI.fontSizeSmall;
                                        sCStealthCheckbox.isEnabled = false;
                                    sCStealthContainer.addControl(sCStealthCheckbox);
                                    let sCStealthField = GameGUI.createInputText("skillContainerStealthField");
                                        sCStealthField.fontSize = GameGUI.fontSizeSmall;
                                        sCStealthField.width = String(GameGUI.fontSizeSmallInPixels * 3).concat("px");
                                        sCStealthField.text = "0";
                                        sCStealthField.isEnabled = false;
                                    sCStealthContainer.addControl(sCStealthField);
                                    let sCStealthLabel = GameGUI.createTextBlock("skillContainerStealthLabel");
                                        sCStealthLabel.width = sCStealthContainer.width;
                                        sCStealthLabel.fontSize = GameGUI.fontSizeSmall;
                                        sCStealthLabel.text = "Stealth";
                                        sCStealthLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                    sCStealthContainer.addControl(sCStealthLabel);
                                skillContainer.addControl(sCStealthContainer);
                                let skillLabel = GameGUI.createTextBlock("skillLabel");
                                    skillLabel.height = GameGUI.fontSizeSmall;
                                    skillLabel.width = skillContainer.width;
                                    skillLabel.fontSize = GameGUI.fontSizeSmall;
                                    skillLabel.text = "Skills";
                                skillContainer.addControl(skillLabel);
                            colARowAColB.addControl(skillContainer);                            
                        colARowA.addControl(colARowAColB);
                    colA.addControl(colARowA);
                    let colARowB = GameGUI.createStackPanel("colARowB");
                        colARowB.height = String((colA.heightInPixels / 7) * 0.5).concat("px");
                        colARowB.width = colA.width;
                        colARowB.isVertical = false;
                        let passiveWisdomScore = GameGUI.createTextBlock("passiveWisdomScore");
                            passiveWisdomScore.height = colARowB.height;
                            passiveWisdomScore.width = passiveWisdomScore.height;
                            passiveWisdomScore.text = "0";
                        colARowB.addControl(passiveWisdomScore);
                        let passiveWisdomLabel = GameGUI.createTextBlock("passiveWisdomLabel");
                            passiveWisdomLabel.height = colARowB.height;
                            passiveWisdomLabel.width = String(colARowB.widthInPixels - passiveWisdomScore.widthInPixels).concat("px");
                            passiveWisdomLabel.fontSize = GameGUI.fontSizeSmall;
                            passiveWisdomLabel.text = "Passive Wisdom (Perception)";
                            //passiveWisdomLabel.textSmall = "Passive Wisdom";
                            //passiveWisdomLabel.textTiny = "Pass. Wis";
                            passiveWisdomLabel.color = GameGUI.color;
                        colARowB.addControl(passiveWisdomLabel);
                    colA.addControl(colARowB);
                    let proficienciesAndLanguagesContainer = GameGUI.createStackPanel("proficienciesAndLanguagesContainer");
                        proficienciesAndLanguagesContainer.height = String((colA.heightInPixels / 7) * 2.5).concat("px");
                        proficienciesAndLanguagesContainer.width = colA.width;
                        let proficienciesAndLanguagesField = GameGUI.createTextBlock("proficienciesAndLanguagesField");
                            proficienciesAndLanguagesField.height = String(proficienciesAndLanguagesContainer.heightInPixels - GameGUI.fontSizeSmallInPixels).concat("px");
                            proficienciesAndLanguagesField.width = proficienciesAndLanguagesContainer.width;
                            proficienciesAndLanguagesField.fontSize = GameGUI.fontSizeSmall;
                            proficienciesAndLanguagesField.textVerticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_TOP;
                            proficienciesAndLanguagesField.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                        proficienciesAndLanguagesContainer.addControl(proficienciesAndLanguagesField);
                        let proficienciesAndLanguagesLabel = GameGUI.createTextBlock("proficienciesAndLanguagesLabel");
                            proficienciesAndLanguagesLabel.height = GameGUI.fontSizeSmall;
                            proficienciesAndLanguagesLabel.width = proficienciesAndLanguagesContainer.width;
                            proficienciesAndLanguagesLabel.fontSize = GameGUI.fontSizeSmall;
                            proficienciesAndLanguagesLabel.text = "Other Proficiencies and Languages";
                            //proficienciesAndLanguagesField.textSmall = "Proficiencies and Languages";
                            //proficienciesAndLanguagesField.textTiny = "Profs & Langs";
                        proficienciesAndLanguagesContainer.addControl(proficienciesAndLanguagesLabel);
                    colA.addControl(proficienciesAndLanguagesContainer);
                body.addControl(colA);
                let colB = GameGUI.createStackPanel("colB");
                    colB.height = body.height;
                    colB.width = String(body.widthInPixels / 3).concat("px");
                    colB.isVertical = true;
                body.addControl(colB);
                let colC = GameGUI.createStackPanel("colC");
                    colC.height = body.height;
                    colC.width = String(body.widthInPixels / 3).concat("px");
                    colC.isVertical = true;
                body.addControl(colC);
            controller.addControl(body);
        CharacterStatsGUI.controller = controller;
        CharacterStatsGUI.header = header;
        CharacterStatsGUI.nameContainer = hNameContainer;
        CharacterStatsGUI.nameField = hNCField;
        CharacterStatsGUI.nameLabel = hNCLabel;
        CharacterStatsGUI.infoContainer = hInfoContainer;
        CharacterStatsGUI.infoTop = hICTop;
        CharacterStatsGUI.classContainer = hICTClassContainer;
        CharacterStatsGUI.classField = hICTCCText;
        CharacterStatsGUI.classLabel = hICTCCLabel;
        CharacterStatsGUI.backgroundContainer = hICTBGgContainer;
        CharacterStatsGUI.backgroundField = hICTBGCText;
        CharacterStatsGUI.backgroundLabel = hICTBGCLabel;
        CharacterStatsGUI.accountContainer = hICTAccNameContainer;
        CharacterStatsGUI.accountField = hICTANCText;
        CharacterStatsGUI.accountLabel = hICTANCLabel;
        CharacterStatsGUI.infoBottom = hICBot;
        CharacterStatsGUI.raceContainer = hICBRaceContainer;
        CharacterStatsGUI.raceField = hICBRCText;
        CharacterStatsGUI.raceLabel = hICBRCLabel;
        CharacterStatsGUI.alignmentContainer = hICBAlignmentContainer;
        CharacterStatsGUI.alignmentField = hICBACText;
        CharacterStatsGUI.alignmentLabel = hICBACLabel;
        CharacterStatsGUI.xpContainer = hICBXPContainer;
        CharacterStatsGUI.xpField = hICBXPCText;
        CharacterStatsGUI.xpLabel = hICBXPCLabel;
        CharacterStatsGUI.body = body;
        CharacterStatsGUI.colA = colA;
        CharacterStatsGUI.colARowA = colARowA;
        CharacterStatsGUI.colARowAColA = colARowAColA;
        CharacterStatsGUI.strengthContainer = strengthContainer;
        CharacterStatsGUI.strengthButtons = strengthButtons;
        CharacterStatsGUI.strengthIncButton = strengthIncButton;
        CharacterStatsGUI.strengthDecButton = strengthDecButton;
        CharacterStatsGUI.strengthData = strengthData;
        CharacterStatsGUI.strengthLabel = strengthLabel;
        CharacterStatsGUI.strengthAbilityModifier = strengthAbilityModifier;
        CharacterStatsGUI.strengthAbilityField = strengthAbilityScore;
        CharacterStatsGUI.dexterityContainer = dexterityContainer;
        CharacterStatsGUI.dexterityButtons = dexterityButtons;
        CharacterStatsGUI.dexterityIncButton = dexterityIncButton;
        CharacterStatsGUI.dexterityDecButton = dexterityDecButton;
        CharacterStatsGUI.dexterityData = dexterityData;
        CharacterStatsGUI.dexterityLabel = dexterityLabel;
        CharacterStatsGUI.dexterityAbilityModifier = dexterityAbilityModifier;
        CharacterStatsGUI.dexterityAbilityField = dexterityAbilityScore;
        CharacterStatsGUI.constitutionContainer = constitutionContainer;
        CharacterStatsGUI.constitutionButtons = constitutionButtons;
        CharacterStatsGUI.constitutionIncButton = constitutionIncButton;
        CharacterStatsGUI.constitutionDecButton = constitutionDecButton;
        CharacterStatsGUI.constitutionData = constitutionData;
        CharacterStatsGUI.constitutionLabel = constitutionLabel;
        CharacterStatsGUI.constitutionAbilityModifier = constitutionAbilityModifier;
        CharacterStatsGUI.constitutionAbilityField = constitutionAbilityScore;
        CharacterStatsGUI.intelligenceContainer = intelligenceContainer;
        CharacterStatsGUI.intelligenceButtons = intelligenceButtons;
        CharacterStatsGUI.intelligenceIncButton = intelligenceIncButton;
        CharacterStatsGUI.intelligenceDecButton = intelligenceDecButton;
        CharacterStatsGUI.intelligenceData = intelligenceData;
        CharacterStatsGUI.intelligenceLabel = intelligenceLabel;
        CharacterStatsGUI.intelligenceAbilityModifier = intelligenceAbilityModifier;
        CharacterStatsGUI.intelligenceAbilityField = intelligenceAbilityScore;
        CharacterStatsGUI.wisdomContainer = wisdomContainer;
        CharacterStatsGUI.wisdomButtons = wisdomButtons;
        CharacterStatsGUI.wisdomIncButton = wisdomIncButton;
        CharacterStatsGUI.wisdomDecButton = wisdomDecButton;
        CharacterStatsGUI.wisdomData = wisdomData;
        CharacterStatsGUI.wisdomLabel = wisdomLabel;
        CharacterStatsGUI.wisdomAbilityModifier = wisdomAbilityModifier;
        CharacterStatsGUI.wisdomAbilityField = wisdomAbilityScore;
        CharacterStatsGUI.charismaContainer = charismaContainer;
        CharacterStatsGUI.charismaButtons = charismaButtons;
        CharacterStatsGUI.charismaIncButton = charismaIncButton;
        CharacterStatsGUI.charismaDecButton = charismaDecButton;
        CharacterStatsGUI.charismaData = charismaData;
        CharacterStatsGUI.charismaLabel = charismaLabel;
        CharacterStatsGUI.charismaAbilityModifier = charismaAbilityModifier;
        CharacterStatsGUI.charismaAbilityField = charismaAbilityScore;
        CharacterStatsGUI.colARowAColB = colARowAColB;
        CharacterStatsGUI.inspirationContainer = inspirationContainer;
        CharacterStatsGUI.inspirationField = inspirationScore;
        CharacterStatsGUI.inspirationLabel = inspirationLabel;
        CharacterStatsGUI.proficiencyBonusContainer = proficiencyBonusContainer;
        CharacterStatsGUI.proficiencyBonusField = proficiencyBonusScore;
        CharacterStatsGUI.proficiencyBonusLabel = proficiencyBonusLabel;
        CharacterStatsGUI.savingThrowContainer = savingThrowContainer;
        CharacterStatsGUI.savingThrowStrengthContainer = sTCStrengthContainer;
        CharacterStatsGUI.savingThrowStrengthCheckbox = sTCStrengthCheckbox;
        CharacterStatsGUI.savingThrowStrengthField = sTCStrengthField;
        CharacterStatsGUI.savingThrowStrengthLabel = sTCStrengthLabel;
        CharacterStatsGUI.savingThrowDexterityContainer = sTCDexterityContainer;
        CharacterStatsGUI.savingThrowDexterityCheckbox = sTCDexterityCheckbox;
        CharacterStatsGUI.savingThrowDexterityField = sTCDexterityField;
        CharacterStatsGUI.savingThrowDexterityLabel = sTCDexterityLabel;
        CharacterStatsGUI.savingThrowConstitutionContainer = sTCConstitutionContainer;
        CharacterStatsGUI.savingThrowConstitutionCheckbox = sTCConstitutionCheckbox;
        CharacterStatsGUI.savingThrowConstitutionContainer = sTCConstitutionContainer;
        CharacterStatsGUI.savingThrowConstitutionField = sTCConstitutionField;
        CharacterStatsGUI.savingThrowConstitutionLabel = sTCConstitutionLabel;
        CharacterStatsGUI.savingThrowIntelligenceContainer = sTCIntelligenceContainer;
        CharacterStatsGUI.savingThrowIntelligenceCheckbox = sTCIntelligenceCheckbox;
        CharacterStatsGUI.savingThrowIntelligenceField = sTCIntelligenceField;
        CharacterStatsGUI.savingThrowIntelligenceLabel = sTCIntelligenceLabel;
        CharacterStatsGUI.savingThrowWisdomContainer = sTCWisdomContainer;
        CharacterStatsGUI.savingThrowWisdomCheckbox = sTCWisdomCheckbox;
        CharacterStatsGUI.savingThrowWisdomField = sTCWisdomField;
        CharacterStatsGUI.savingThrowWisdomLabel = sTCWisdomLabel;
        CharacterStatsGUI.savingThrowCharismaContainer = sTCCharismaContainer;
        CharacterStatsGUI.savingThrowCharismaCheckbox = sTCCharismaCheckbox;
        CharacterStatsGUI.savingThrowCharismaField = sTCCharismaField;
        CharacterStatsGUI.savingThrowCharismaLabel = sTCCharismaLabel;
        CharacterStatsGUI.savingThrowLabel = savingThrowLabel;
        CharacterStatsGUI.skillContainer = skillContainer;
        CharacterStatsGUI.skillAcrobaticsContainer = sCAcrobaticsContainer;
        CharacterStatsGUI.skillAcrobaticsCheckbox = sCAcrobaticsCheckbox;
        CharacterStatsGUI.skillAcrobaticsField = sCAcrobaticsField;
        CharacterStatsGUI.skillAcrobaticsLabel = sCAcrobaticsLabel;
        CharacterStatsGUI.skillAnimalHandlingContainer = sCAnimalHandlingContainer;
        CharacterStatsGUI.skillAnimalHandlingCheckbox = sCAnimalHandlingCheckbox;
        CharacterStatsGUI.skillAnimalHandlingField = sCAnimalHandlingField;
        CharacterStatsGUI.skillAnimalHandlingLabel = sCAnimalHandlingLabel;
        CharacterStatsGUI.skillArcanaContainer = sCArcanaContainer;
        CharacterStatsGUI.skillArcanaCheckbox = sCArcanaCheckbox;
        CharacterStatsGUI.skillArcanaField = sCArcanaField;
        CharacterStatsGUI.skillArcanaLabel = sCArcanaLabel;
        CharacterStatsGUI.skillAthleticsContainer = sCAthleticsContainer;
        CharacterStatsGUI.skillAthleticsCheckbox = sCAthleticsCheckbox;
        CharacterStatsGUI.skillAthleticsField = sCAthleticsField;
        CharacterStatsGUI.skillAthleticsLabel = sCAthleticsLabel;
        CharacterStatsGUI.skillDeceptionContainer = sCDeceptionContainer;
        CharacterStatsGUI.skillDeceptionCheckbox = sCDeceptionCheckbox;
        CharacterStatsGUI.skillDeceptionField = sCDeceptionField;
        CharacterStatsGUI.skillDeceptionLabel = sCDeceptionLabel;
        CharacterStatsGUI.skillHistoryContainer = sCHistoryContainer;
        CharacterStatsGUI.skillHistoryCheckbox = sCHistoryCheckbox;
        CharacterStatsGUI.skillHistoryField = sCHistoryField;
        CharacterStatsGUI.skillHistoryLabel = sCHistoryLabel;
        CharacterStatsGUI.skillInsightContainer = sCInsightContainer;
        CharacterStatsGUI.skillInsightCheckbox = sCInsightCheckbox;
        CharacterStatsGUI.skillInsightField = sCInsightField;
        CharacterStatsGUI.skillInsightLabel = sCInsightLabel;
        CharacterStatsGUI.skillIntimidationContainer = sCIntimidationContainer;
        CharacterStatsGUI.skillIntimidationCheckbox = sCIntimidationCheckbox;
        CharacterStatsGUI.skillIntimidationField = sCIntimidationField;
        CharacterStatsGUI.skillIntimidationLabel = sCIntimidationLabel;
        CharacterStatsGUI.skillInvestigationContainer = sCInvestigationContainer;
        CharacterStatsGUI.skillInvestigationCheckbox = sCInvestigationCheckbox;
        CharacterStatsGUI.skillInvestigationField = sCInvestigationField;
        CharacterStatsGUI.skillInvestigationLabel = sCInvestigationLabel;
        CharacterStatsGUI.skillMedicineContainer = sCMedicineContainer;
        CharacterStatsGUI.skillMedicineCheckbox = sCMedicineCheckbox;
        CharacterStatsGUI.skillMedicineField = sCMedicineField;
        CharacterStatsGUI.skillMedicineLabel = sCMedicineLabel;
        CharacterStatsGUI.skillNatureContainer = sCNatureContainer;
        CharacterStatsGUI.skillNatureCheckbox = sCNatureCheckbox;
        CharacterStatsGUI.skillNatureField = sCNatureField;
        CharacterStatsGUI.skillNatureLabel = sCNatureLabel;
        CharacterStatsGUI.skillPerceptionContainer = sCPerceptionContainer;
        CharacterStatsGUI.skillPerceptionCheckbox = sCPerceptionCheckbox;
        CharacterStatsGUI.skillPerceptionField = sCPerceptionField;
        CharacterStatsGUI.skillPerceptionLabel = sCPerceptionLabel;
        CharacterStatsGUI.skillPerformanceContainer = sCPerformanceContainer;
        CharacterStatsGUI.skillPerformanceCheckbox = sCPerformanceCheckbox;
        CharacterStatsGUI.skillPerformanceField = sCPerformanceField;
        CharacterStatsGUI.skillPerformanceLabel = sCPerformanceLabel;
        CharacterStatsGUI.skillPersuasionContainer = sCPersuasionContainer;
        CharacterStatsGUI.skillPersuasionCheckbox = sCPersuasionCheckbox;
        CharacterStatsGUI.skillPersuasionField = sCPersuasionField;
        CharacterStatsGUI.skillPersuasionLabel = sCPersuasionLabel;
        CharacterStatsGUI.skillReligionContainer = sCReligionContainer;
        CharacterStatsGUI.skillReligionCheckbox = sCReligionCheckbox;
        CharacterStatsGUI.skillReligionField = sCReligionField;
        CharacterStatsGUI.skillReligionLabel = sCReligionLabel;
        CharacterStatsGUI.skillSleightOfHandContainer = sCSleightOfHandContainer;
        CharacterStatsGUI.skillSleightOfHandCheckbox = sCSleightOfHandCheckbox;
        CharacterStatsGUI.skillSleightOfHandField = sCSleightOfHandField;
        CharacterStatsGUI.skillSleightOfHandLabel = sCSleightOfHandLabel;
        CharacterStatsGUI.skillStealthContainer = sCStealthContainer;
        CharacterStatsGUI.skillStealthCheckbox = sCStealthCheckbox;
        CharacterStatsGUI.skillStealthField = sCStealthField;
        CharacterStatsGUI.skillStealthLabel = sCStealthLabel;
        CharacterStatsGUI.skillLabel = skillLabel;
        CharacterStatsGUI.colARowB = colARowB;
        CharacterStatsGUI.passiveWisdomField = passiveWisdomScore;
        CharacterStatsGUI.passiveWisdomLabel = passiveWisdomLabel;
        CharacterStatsGUI.proficienciesAndLanguagesContainer = proficienciesAndLanguagesContainer;
        CharacterStatsGUI.proficienciesAndLanguagesField = proficienciesAndLanguagesField;
        CharacterStatsGUI.proficienciesAndLanguagesLabel = proficienciesAndLanguagesLabel
        CharacterStatsGUI.colB = colB;
        CharacterStatsGUI.colC = colC;
        CharacterStatsGUI.initialized = true;
        return controller;
    }
    static getController() {
        return CharacterStatsGUI.controller;
    }
    static show() {
        CharacterStatsGUI.controller.isVisible = true;
        CharacterStatsGUI.isVisible = true;
    }
    static hide() {
        CharacterStatsGUI.controller.isVisible = false;
        CharacterStatsGUI.isVisible = false;
    }
    static updateWith(creatureController = Game.playerController) {
        if (!(creatureController instanceof EntityController)) {
            if (CreatureController.has(creatureController)) {
                creatureController = CreatureController.get(creatureController);
            }
            else {
                return 2;
            }
        }
        if (!Game.hasCachedEntity(creatureController.entityID)) {
            let callbackID = Tools.genUUIDv4();
            Game.createCallback(callbackID, null, [creatureController], CharacterStatsGUI.updateWithResponse)
            Game.getEntity(creatureController.entityID, callbackID);
            return 1;
        }
        else {
            return CharacterStatsGUI.updateWithResponse(creatureController, Game.getCachedEntity(creatureController.entityID));
        }
    }
    static updateWithResponse(creatureController, response, callbackID) {
        CharacterStatsGUI.nameField.text = creatureController.getName();
        CharacterStatsGUI.classField.text = creatureController.getClass().getName();
        //CharacterStatsGUI.backgroundField.text = creatureEntity.get();
        //CharacterStatsGUI.accountNameField.text = creatureEntity.get();
        CharacterStatsGUI.raceField.text = CreatureSubTypeEnum.properties[creatureController.getCreatureSubType()].name;
        //CharacterStatsGUI.alignmentField.text = creatureEntity.get();
        CharacterStatsGUI.xpField.text = String(creatureController.getXP());
        let checkbox = false;
        let number = DND5E.calculateAbilityModifier(creatureController.getStrength());
        CharacterStatsGUI.strengthAbilityModifier.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.strengthAbilityField.text = String(creatureController.getStrength());
        number = DND5E.calculateAbilityModifier(creatureController.getDexterity());
        CharacterStatsGUI.dexterityAbilityModifier.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.dexterityAbilityField.text = String(creatureController.getDexterity())
        number = DND5E.calculateAbilityModifier(creatureController.getConstitution());
        CharacterStatsGUI.constitutionAbilityModifier.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.constitutionAbilityField.text = String(creatureController.getConstitution());
        number = DND5E.calculateAbilityModifier(creatureController.getIntelligence());
        CharacterStatsGUI.intelligenceAbilityModifier.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.intelligenceAbilityField.text = String(creatureController.getIntelligence());
        number = DND5E.calculateAbilityModifier(creatureController.getWisdom());
        CharacterStatsGUI.wisdomAbilityModifier.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.wisdomAbilityField.text = String(creatureController.getWisdom());
        number = DND5E.calculateAbilityModifier(creatureController.getCharisma());
        CharacterStatsGUI.charismaAbilityModifier.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.charismaAbilityField.text = String(creatureController.getCharisma());
        
        CharacterStatsGUI.passiveWisdomField.text = String(creatureController.getPassivePerception());
        number = creatureController.getProficiencyBonus();
        CharacterStatsGUI.proficiencyBonusField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.inspirationField.text = String(creatureController.getInspiration());
        // saving throws
        number = DND5E.calculateAbilityModifier(creatureController.getStrength());
        if (creatureController.hasProficiency("STRENGTH")) {
            number += creatureController.getProficiencyBonus();
            checkbox = true;
        }
        else {
            checkbox = false;
        }
        CharacterStatsGUI.savingThrowStrengthField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.savingThrowStrengthCheckbox.isChecked = checkbox;
        number = DND5E.calculateAbilityModifier(creatureController.getDexterity());
        if (creatureController.hasProficiency("DEXTERITY")) {
            number += creatureController.getProficiencyBonus();
            checkbox = true;
        }
        else {
            checkbox = false;
        }
        CharacterStatsGUI.savingThrowDexterityField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.savingThrowDexterityCheckbox.isChecked = checkbox;
        number = DND5E.calculateAbilityModifier(creatureController.getConstitution());
        if (creatureController.hasProficiency("CONSTITUTION")) {
            number += creatureController.getProficiencyBonus();
            checkbox = true;
        }
        else {
            checkbox = false;
        }
        CharacterStatsGUI.savingThrowConstitutionField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.savingThrowConstitutionCheckbox.isChecked = checkbox;
        number = DND5E.calculateAbilityModifier(creatureController.getIntelligence());
        if (creatureController.hasProficiency("INTELLIGENCE")) {
            number += creatureController.getProficiencyBonus();
            checkbox = true;
        }
        else {
            checkbox = false;
        }
        CharacterStatsGUI.savingThrowIntelligenceField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.savingThrowIntelligenceCheckbox.isChecked = checkbox;
        number = DND5E.calculateAbilityModifier(creatureController.getWisdom());
        if (creatureController.hasProficiency("WISDOM")) {
            number += creatureController.getProficiencyBonus();
            checkbox = true;
        }
        else {
            checkbox = false;
        }
        CharacterStatsGUI.savingThrowWisdomField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.savingThrowWisdomCheckbox.isChecked = checkbox;
        number = DND5E.calculateAbilityModifier(creatureController.getCharisma());
        if (creatureController.hasProficiency("CHARISMA")) {
            number += creatureController.getProficiencyBonus();
            checkbox = true;
        }
        else {
            checkbox = false;
        }
        CharacterStatsGUI.savingThrowCharismaField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.savingThrowCharismaCheckbox.isChecked = checkbox;
        // other proficiencies and languages
        number = creatureController.getSkillScore(ProficiencyEnum.ACROBATICS);
        CharacterStatsGUI.skillAcrobaticsField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.skillAcrobaticsCheckbox.isChecked = creatureController.hasProficiency(ProficiencyEnum.ACROBATICS);
        number = creatureController.getSkillScore(ProficiencyEnum.ANIMAL_HANDLING);
        CharacterStatsGUI.skillAnimalHandlingField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.skillAnimalHandlingCheckbox.isChecked = creatureController.hasProficiency(ProficiencyEnum.ANIMAL_HANDLING);
        number = creatureController.getSkillScore(ProficiencyEnum.ARCANA);
        CharacterStatsGUI.skillArcanaField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.skillArcanaCheckbox.isChecked = creatureController.hasProficiency(ProficiencyEnum.ARCANA);
        number = creatureController.getSkillScore(ProficiencyEnum.ATHLETICS);
        CharacterStatsGUI.skillAthleticsField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.skillAthleticsCheckbox.isChecked = creatureController.hasProficiency(ProficiencyEnum.ATHLETICS);
        number = creatureController.getSkillScore(ProficiencyEnum.DECEPTION);
        CharacterStatsGUI.skillDeceptionField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.skillDeceptionCheckbox.isChecked = creatureController.hasProficiency(ProficiencyEnum.DECEPTION);
        number = creatureController.getSkillScore(ProficiencyEnum.HISTORY);
        CharacterStatsGUI.skillHistoryField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.skillHistoryCheckbox.isChecked = creatureController.hasProficiency(ProficiencyEnum.HISTORY);
        number = creatureController.getSkillScore(ProficiencyEnum.INSIGHT);
        CharacterStatsGUI.skillInsightField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.skillInsightCheckbox.isChecked = creatureController.hasProficiency(ProficiencyEnum.INSIGHT);
        number = creatureController.getSkillScore(ProficiencyEnum.INTIMIDATION);
        CharacterStatsGUI.skillIntimidationField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.skillIntimidationCheckbox.isChecked = creatureController.hasProficiency(ProficiencyEnum.INTIMIDATION);
        number = creatureController.getSkillScore(ProficiencyEnum.INVESTIGATION);
        CharacterStatsGUI.skillInvestigationField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.skillInvestigationCheckbox.isChecked = creatureController.hasProficiency(ProficiencyEnum.INVESTIGATION);
        number = creatureController.getSkillScore(ProficiencyEnum.MEDICINE);
        CharacterStatsGUI.skillMedicineField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.skillMedicineCheckbox.isChecked = creatureController.hasProficiency(ProficiencyEnum.MEDICINE);
        number = creatureController.getSkillScore(ProficiencyEnum.NATURE);
        CharacterStatsGUI.skillNatureField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.skillNatureCheckbox.isChecked = creatureController.hasProficiency(ProficiencyEnum.NATURE);
        number = creatureController.getSkillScore(ProficiencyEnum.PERCEPTION);
        CharacterStatsGUI.skillPerceptionField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.skillPerceptionCheckbox.isChecked = creatureController.hasProficiency(ProficiencyEnum.PERCEPTION);
        number = creatureController.getSkillScore(ProficiencyEnum.PERFORMANCE);
        CharacterStatsGUI.skillPerformanceField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.skillPerformanceCheckbox.isChecked = creatureController.hasProficiency(ProficiencyEnum.PERFORMANCE);
        number = creatureController.getSkillScore(ProficiencyEnum.PERSUASION);
        CharacterStatsGUI.skillPersuasionField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.skillPersuasionCheckbox.isChecked = creatureController.hasProficiency(ProficiencyEnum.PERSUASION);
        number = creatureController.getSkillScore(ProficiencyEnum.RELIGION);
        CharacterStatsGUI.skillReligionField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.skillReligionCheckbox.isChecked = creatureController.hasProficiency(ProficiencyEnum.RELIGION);
        number = creatureController.getSkillScore(ProficiencyEnum.SLEIGHT_OF_HAND);
        CharacterStatsGUI.skillSleightOfHandField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.skillSleightOfHandCheckbox.isChecked = creatureController.hasProficiency(ProficiencyEnum.SLEIGHT_OF_HAND);
        number = creatureController.getSkillScore(ProficiencyEnum.STEALTH);
        CharacterStatsGUI.skillStealthField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGUI.skillStealthCheckbox.isChecked = creatureController.hasProficiency(ProficiencyEnum.STEALTH);

        // proficienciesAndLanguages will include Languages, Armour, Weapons, and Tools & Kits
    }
}